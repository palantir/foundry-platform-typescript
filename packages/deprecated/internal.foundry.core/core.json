{
  "irVersion": "v2",
  "namespaces": [{
    "name": "Core",
    "version": "v1",
    "outputAuditVersions": "V3_ONLY",
    "components": [{
      "locator": {
        "namespaceName": "Core",
        "localName": "ListInterfaceTypesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Query"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ExecuteQueryResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DataValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "By default, anytime an object is requested, every property belonging to that object is returned.\nThe response can be filtered to only include certain properties using the `properties` query parameter.\n\nProperties to include can be specified in one of two ways.\n\n- A comma delimited list as the value for the `properties` query parameter\n  `properties={property1ApiName},{property2ApiName}`\n- Multiple `properties` query parameters.\n  `properties={property1ApiName}&properties={property2ApiName}`\n\nThe primary key of the object will always be returned even if it wasn't specified in the `properties` values.\n\nUnknown properties specified in the `properties` list will result in a `PropertiesNotFound` error.\n\nTo find the API name for your property, use the `Get object type` endpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "By default, anytime an object is requested, every property belonging to that object is returned.\nThe response can be filtered to only include certain properties using the properties query parameter.\nProperties to include can be specified in one of two ways.\n\nA comma delimited list as the value for the properties query parameter\nproperties={property1ApiName},{property2ApiName}\nMultiple properties query parameters.\nproperties={property1ApiName}&properties={property2ApiName}\n\nThe primary key of the object will always be returned even if it wasn't specified in the properties values.\nUnknown properties specified in the properties list will result in a PropertiesNotFound error.\nTo find the API name for your property, use the Get object type endpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchJsonQuery"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "or": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OrQuery"
                  }
                }
              }
            },
            "prefix": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PrefixQuery"
                  }
                }
              }
            },
            "lt": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LtQuery"
                  }
                }
              }
            },
            "allTerms": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AllTermsQuery"
                  }
                }
              }
            },
            "eq": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "EqualsQuery"
                  }
                }
              }
            },
            "gt": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GtQuery"
                  }
                }
              }
            },
            "contains": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ContainsQuery"
                  }
                }
              }
            },
            "not": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "NotQuery"
                  }
                }
              }
            },
            "phrase": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PhraseQuery"
                  }
                }
              }
            },
            "and": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AndQuery"
                  }
                }
              }
            },
            "isNull": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IsNullQuery"
                  }
                }
              }
            },
            "gte": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GteQuery"
                  }
                }
              }
            },
            "anyTerm": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AnyTermQuery"
                  }
                }
              }
            },
            "lte": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LteQuery"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BoundingBoxValue"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "topLeft": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "WithinBoundingBoxPoint"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "bottomRight": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "WithinBoundingBoxPoint"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The top left and bottom right coordinate points that make up the bounding box.\n",
        "plainTextDescription": "The top left and bottom right coordinate points that make up the bounding box.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DeleteInterfaceObjectRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "interfaceTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LteQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is less than or equal to a value. Allows you to specify a property to \nquery on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field is less than or equal to a value. Allows you to specify a property to\nquery on by a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectPrimaryKey"
      },
      "type": {
        "type": "map",
        "map": {
          "keyType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "valueType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyValue"
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BatchApplyActionResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "edits": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionResults"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DeleteLinkRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "linkTypeApiNameAtoB": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "linkTypeApiNameBtoA": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "aSideObjectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "bSideObjectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectSetRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "aggregation": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "groupBy": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "accuracy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationAccuracyRequest"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CenterPoint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "center": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CenterPointTypes"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "distance": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Distance"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The coordinate point to use as the center of the distance query.\n",
        "plainTextDescription": "The coordinate point to use as the center of the distance query.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryTypeV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryParameterV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "output": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FunctionRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "version": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FunctionVersion"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents a query type in the Ontology.",
        "plainTextDescription": "Represents a query type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterEvaluationResult"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "result": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValidationResult"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "evaluatedConstraints": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterEvaluatedConstraint"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "required": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Represents whether the parameter is a required input to the action.",
                "plainTextDescription": "Represents whether the parameter is a required input to the action.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the validity of a parameter against the configured constraints.",
        "plainTextDescription": "Represents the validity of a parameter against the configured constraints.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GteQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is greater than or equal to a value. Allows you to specify a property \nto query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field is greater than or equal to a value. Allows you to specify a property\nto query on by a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListLinkedObjectsResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObject"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationObjectTypeGrouping"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Divides objects into groups based on their object type. This grouping is only useful when aggregating across \nmultiple object types, such as when aggregating over an interface type.\n",
        "plainTextDescription": "Divides objects into groups based on their object type. This grouping is only useful when aggregating across\nmultiple object types, such as when aggregating over an interface type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GeotimeSeriesValue"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "position": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Geo",
                    "localName": "Position"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "timestamp": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "datetime",
                  "datetime": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The underlying data values pointed to by a GeotimeSeriesReference.",
        "plainTextDescription": "The underlying data values pointed to by a GeotimeSeriesReference.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionMode"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ASYNC", "RUN", "VALIDATE"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationDurationGroupingV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "unit": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimeUnit"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups according to an interval. Note that this grouping applies only on date and timestamp types.\nWhen grouping by `YEARS`, `QUARTERS`, `MONTHS`, or `WEEKS`, the `value` must be set to `1`.\n",
        "plainTextDescription": "Divides objects into groups according to an interval. Note that this grouping applies only on date and timestamp types.\nWhen grouping by YEARS, QUARTERS, MONTHS, or WEEKS, the value must be set to 1.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApproximateDistinctAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes an approximate number of distinct values for the provided field.",
        "plainTextDescription": "Computes an approximate number of distinct values for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OrderByDirection"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ASC", "DESC"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AbsoluteTimeRange"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "startTime": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "datetime",
                      "datetime": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "endTime": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "datetime",
                      "datetime": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "ISO 8601 timestamps forming a range for a time series query. Start is inclusive and end is exclusive.",
        "plainTextDescription": "ISO 8601 timestamps forming a range for a time series query. Start is inclusive and end is exclusive.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeseriesTemplateVersion"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The version corresponding to a codex template.",
        "plainTextDescription": "The version corresponding to a codex template.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ValidateActionRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationMetricResultV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The value of the metric. This will be a double in the case of\na numeric metric, or a date string in the case of a date metric.\n",
                "plainTextDescription": "The value of the metric. This will be a double in the case of\na numeric metric, or a date string in the case of a date metric.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OrQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQueryV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where at least 1 query is satisfied.",
        "plainTextDescription": "Returns objects where at least 1 query is satisfied.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncApplyActionRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StructFieldApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of a struct field in the Ontology.",
        "plainTextDescription": "The name of a struct field in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyFullMetadata"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "ontology": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyV2"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectTypes": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeFullMetadata"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "actionTypes": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionTypeV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "queryTypes": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryTypeV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "interfaceTypes": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "sharedPropertyTypes": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeseriesEntry"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "time": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "datetime",
                  "datetime": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An ISO 8601 timestamp",
                "plainTextDescription": "An ISO 8601 timestamp",
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An object which is either an enum String, double number, or a geopoint.",
                "plainTextDescription": "An object which is either an enum String, double number, or a geopoint.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A time and value pair.\n",
        "plainTextDescription": "A time and value pair.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LoadObjectSetRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "orderBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "select": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SelectedPropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageSize": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageSize"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "excludeRid": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "boolean",
                      "boolean": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "A flag to exclude the retrieval of the `__rid` property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.\n",
                "plainTextDescription": "A flag to exclude the retrieval of the __rid property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the API POST body when loading an `ObjectSet`.",
        "plainTextDescription": "Represents the API POST body when loading an ObjectSet.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StreamTimeSeriesPointsResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "TimeSeriesPoint"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryArrayType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "subType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationExactGrouping"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "maxGroupCount": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "integer",
                      "integer": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups according to an exact value.",
        "plainTextDescription": "Divides objects into groups according to an exact value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchObjectsRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "query": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SearchJsonQuery"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "orderBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderBy"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageSize": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageSize"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "pageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fields": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The API names of the object type properties to include in the response.\n",
                "plainTextDescription": "The API names of the object type properties to include in the response.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OneOfConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "options": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterOption"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "otherValuesAllowed": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A flag denoting whether custom, user provided values will be considered valid. This is configured via the **Allowed \"Other\" value** toggle in the **Ontology Manager**.",
                "plainTextDescription": "A flag denoting whether custom, user provided values will be considered valid. This is configured via the Allowed \"Other\" value toggle in the Ontology Manager.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The parameter has a manually predefined set of options.\n",
        "plainTextDescription": "The parameter has a manually predefined set of options.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectEdit"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "modifyObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ModifyObject"
                  }
                }
              }
            },
            "addObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AddObject"
                  }
                }
              }
            },
            "addLink": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AddLink"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DerivedPropertyDefinition"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "selection": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Definition of a derived property.\n",
        "plainTextDescription": "Definition of a derived property.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationDurationGrouping"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "duration": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Duration"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups according to an interval. Note that this grouping applies only on date types.\nThe interval uses the ISO 8601 notation. For example, \"PT1H2M34S\" represents a duration of 3754 seconds.\n",
        "plainTextDescription": "Divides objects into groups according to an interval. Note that this grouping applies only on date types.\nThe interval uses the ISO 8601 notation. For example, \"PT1H2M34S\" represents a duration of 3754 seconds.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeEdits"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "editedObjectTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObjectType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObjectV2"
      },
      "type": {
        "type": "map",
        "map": {
          "keyType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "valueType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyValue"
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an object in the Ontology.",
        "plainTextDescription": "Represents an object in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchObjectsResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObjectV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Parameter"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "baseType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValueType"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "dataType": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyDataType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "required": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Details about a parameter of an action or query.",
        "plainTextDescription": "Details about a parameter of an action or query.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetIntersectionType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSets": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectSet"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GeotimeSeriesId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The unique id of a geotime series (track) associated with a GTSR.",
        "plainTextDescription": "The unique id of a geotime series (track) associated with a GTSR.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyInterfaceObjectType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "interfaceTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncApplyActionRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MinAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the minimum value for the provided field.",
        "plainTextDescription": "Computes the minimum value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AddObject"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "primaryKey": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyCountAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Computes the total count of objects.",
        "plainTextDescription": "Computes the total count of objects.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Attachment"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "filename": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Filename"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "sizeBytes": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SizeBytes"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "mediaType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MediaType"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The representation of an attachment.",
        "plainTextDescription": "The representation of an attachment.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyStructField"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StructFieldName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fieldType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "required": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyValue"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field equals any of the provided values. Allows you to\nspecify a property to query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, \nbut not both.\n",
        "plainTextDescription": "Returns objects where the specified field equals any of the provided values. Allows you to\nspecify a property to query on by a variety of means. Either field or propertyIdentifier must be supplied,\nbut not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryAggregationRangeSubType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "integer": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntegerType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the types supported by query aggregation ranges.\n",
        "plainTextDescription": "A union of all the types supported by query aggregation ranges.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LoadObjectSetV2MultipleObjectTypesRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "orderBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "select": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SelectedPropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageSize": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageSize"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "excludeRid": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "boolean",
                      "boolean": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "A flag to exclude the retrieval of the `$rid` property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.\n",
                "plainTextDescription": "A flag to exclude the retrieval of the $rid property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the API POST body when loading an `ObjectSet`. Used on the `/loadObjectsMultipleObjectTypes` endpoint only.\n",
        "plainTextDescription": "Represents the API POST body when loading an ObjectSet. Used on the /loadObjectsMultipleObjectTypes endpoint only.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApplyActionRequestOptions"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "mode": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ApplyActionMode"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "returnEdits": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ReturnEditsMode"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Duration"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "An ISO 8601 formatted duration.",
        "plainTextDescription": "An ISO 8601 formatted duration.",
        "example": ["PT15M"]
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the property in the API. To find the API name for your property, use the `Get object type`\nendpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "The name of the property in the API. To find the API name for your property, use the Get object type\nendpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupValueV2"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "any",
          "any": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetUnionType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSets": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectSet"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeVisibility"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["NORMAL", "PROMINENT", "HIDDEN"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The suggested visibility of the object type.",
        "plainTextDescription": "The suggested visibility of the object type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListAttachmentsResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AttachmentV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListObjectsResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObjectV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of objects in the current page.",
                "plainTextDescription": "The list of objects in the current page.",
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetReferenceType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "reference": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApproximatePercentileAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "approximatePercentile": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "double",
                  "double": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the approximate percentile value for the provided field. Requires Object Storage V2.",
        "plainTextDescription": "Computes the approximate percentile value for the provided field. Requires Object Storage V2.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyFilter"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Represents a filter used on properties.\n\nEndpoints that accept this supports optional parameters that have the form:\n`properties.{propertyApiName}.{propertyFilter}={propertyValueEscapedString}` to filter the returned objects.\nFor instance, you may use `properties.firstName.eq=John` to find objects that contain a property called\n\"firstName\" that has the exact value of \"John\".\n\nThe following are a list of supported property filters:\n\n- `properties.{propertyApiName}.contains` - supported on arrays and can be used to filter array properties\n  that have at least one of the provided values. If multiple query parameters are provided, then objects\n  that have any of the given values for the specified property will be matched.\n- `properties.{propertyApiName}.eq` - used to filter objects that have the exact value for the provided\n  property. If multiple query parameters are provided, then objects that have any of the given values\n  will be matched. For instance, if the user provides a request by doing\n  `?properties.firstName.eq=John&properties.firstName.eq=Anna`, then objects that have a firstName property\n  of either John or Anna will be matched. This filter is supported on all property types except Arrays.\n- `properties.{propertyApiName}.neq` - used to filter objects that do not have the provided property values.\n  Similar to the `eq` filter, if multiple values are provided, then objects that have any of the given values\n  will be excluded from the result.\n- `properties.{propertyApiName}.lt`, `properties.{propertyApiName}.lte`, `properties.{propertyApiName}.gt`\n  `properties.{propertyApiName}.gte` - represent less than, less than or equal to, greater than, and greater\n  than or equal to respectively. These are supported on date, timestamp, byte, integer, long, double, decimal.\n- `properties.{propertyApiName}.isNull` - used to filter objects where the provided property is (or is not) null.\n  This filter is supported on all property types.\n",
        "plainTextDescription": "Represents a filter used on properties.\nEndpoints that accept this supports optional parameters that have the form:\nproperties.{propertyApiName}.{propertyFilter}={propertyValueEscapedString} to filter the returned objects.\nFor instance, you may use properties.firstName.eq=John to find objects that contain a property called\n\"firstName\" that has the exact value of \"John\".\nThe following are a list of supported property filters:\n\nproperties.{propertyApiName}.contains - supported on arrays and can be used to filter array properties\nthat have at least one of the provided values. If multiple query parameters are provided, then objects\nthat have any of the given values for the specified property will be matched.\nproperties.{propertyApiName}.eq - used to filter objects that have the exact value for the provided\nproperty. If multiple query parameters are provided, then objects that have any of the given values\nwill be matched. For instance, if the user provides a request by doing\n?properties.firstName.eq=John&properties.firstName.eq=Anna, then objects that have a firstName property\nof either John or Anna will be matched. This filter is supported on all property types except Arrays.\nproperties.{propertyApiName}.neq - used to filter objects that do not have the provided property values.\nSimilar to the eq filter, if multiple values are provided, then objects that have any of the given values\nwill be excluded from the result.\nproperties.{propertyApiName}.lt, properties.{propertyApiName}.lte, properties.{propertyApiName}.gt\nproperties.{propertyApiName}.gte - represent less than, less than or equal to, greater than, and greater\nthan or equal to respectively. These are supported on date, timestamp, byte, integer, long, double, decimal.\nproperties.{propertyApiName}.isNull - used to filter objects where the provided property is (or is not) null.\nThis filter is supported on all property types.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Icon"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "blueprint": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BlueprintIcon"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union currently only consisting of the BlueprintIcon (more icon types may be added in the future).",
        "plainTextDescription": "A union currently only consisting of the BlueprintIcon (more icon types may be added in the future).",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectsResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "excludedItems": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "integer",
                      "integer": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "accuracy": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationAccuracy"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregateObjectsResponseItemV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ContainsAllTermsInOrderPrefixLastTerm"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": ["foo bar"]
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains all of the terms in the order provided, \nbut they do have to be adjacent to each other.\nThe last term can be a partial prefix match. Allows you to specify a property to query on\nby a variety of means. Either `field` or `propertyIdentifier` can be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field contains all of the terms in the order provided,\nbut they do have to be adjacent to each other.\nThe last term can be a partial prefix match. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier can be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SubscriptionClosureCause"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "reason": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Reason"
                  }
                }
              }
            },
            "error": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Error"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DerivedPropertyApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the derived property that will be returned.\n",
        "plainTextDescription": "The name of the derived property that will be returned.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationFixedWidthGrouping"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fixedWidth": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups with the specified width.",
        "plainTextDescription": "Divides objects into groups with the specified width.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Ontology"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Metadata about an Ontology.",
        "plainTextDescription": "Metadata about an Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SharedPropertyTypeApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the shared property type in the API in lowerCamelCase format. To find the API name for your\nshared property type, use the `List shared property types` endpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "The name of the shared property type in the API in lowerCamelCase format. To find the API name for your\nshared property type, use the List shared property types endpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryAggregationRangeType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "subType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryAggregationRangeSubType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "dataType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectPropertyType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyTypeStatus"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "visibility": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyTypeVisibility"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Details about some property of an object.",
        "plainTextDescription": "Details about some property of an object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Metadata about an Ontology.",
        "plainTextDescription": "Metadata about an Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AvgAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the average value for the provided field.",
        "plainTextDescription": "Computes the average value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceLinkTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an interface link type, useful for interacting with other Foundry APIs.\n",
        "plainTextDescription": "The unique resource identifier of an interface link type, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GtQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is greater than a value. Allows you to specify a property to query on\nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field is greater than a value. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RelativeTimeRelation"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["BEFORE", "AFTER"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ContainsQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified array contains a value. Allows you to specify a property to query on by a \nvariety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified array contains a value. Allows you to specify a property to query on by a\nvariety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "NotQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SearchJsonQuery"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the query is not satisfied.",
        "plainTextDescription": "Returns objects where the query is not satisfied.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationRangesGrouping"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "ranges": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationRange"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups according to specified ranges.",
        "plainTextDescription": "Divides objects into groups according to specified ranges.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FieldNameV1"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A reference to an Ontology object property with the form `properties.{propertyApiName}`.",
        "plainTextDescription": "A reference to an Ontology object property with the form properties.{propertyApiName}.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryUnionType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "unionTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryDataType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "EqualsQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is equal to a value. Allows you to specify a property to query on\nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field is equal to a value. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AllTermsQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fuzzy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Fuzzy"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains all of the whitespace separated words in any\norder in the provided value. This query supports fuzzy matching.\n",
        "plainTextDescription": "Returns objects where the specified field contains all of the whitespace separated words in any\norder in the provided value. This query supports fuzzy matching.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionTypeV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReleaseStatus"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionParameterV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "operations": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "LogicRule"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an action type in the Ontology.",
        "plainTextDescription": "Represents an action type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ExactDistinctAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes an exact number of distinct values for the provided field. May be slower than an approximate distinct aggregation. Requires Object Storage V2.",
        "plainTextDescription": "Computes an exact number of distinct values for the provided field. May be slower than an approximate distinct aggregation. Requires Object Storage V2.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionTypeApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the action type in the API. To find the API name for your Action Type, use the `List action types`\nendpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "The name of the action type in the API. To find the API name for your Action Type, use the List action types\nendpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyExactDistinctAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes an exact number of distinct values for the provided field. May be slower than an approximate distinct aggregation.\n",
        "plainTextDescription": "Computes an exact number of distinct values for the provided field. May be slower than an approximate distinct aggregation.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationRange"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "lt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Exclusive end date.",
                "plainTextDescription": "Exclusive end date.",
                "example": []
              }
            },
            "lte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Inclusive end date.",
                "plainTextDescription": "Inclusive end date.",
                "example": []
              }
            },
            "gt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Exclusive start date.",
                "plainTextDescription": "Exclusive start date.",
                "example": []
              }
            },
            "gte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Inclusive start date.",
                "plainTextDescription": "Inclusive start date.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies a date range from an inclusive start date to an exclusive end date.",
        "plainTextDescription": "Specifies a date range from an inclusive start date to an exclusive end date.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReleaseStatus"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The description of the object type.",
                "plainTextDescription": "The description of the object type.",
                "example": []
              }
            },
            "pluralDisplayName": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The plural display name of the object type.",
                "plainTextDescription": "The plural display name of the object type.",
                "example": []
              }
            },
            "icon": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Icon"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "primaryKey": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "properties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map of the properties of the object type.",
                "plainTextDescription": "A map of the properties of the object type.",
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "titleProperty": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "visibility": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeVisibility"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an object type in the Ontology.",
        "plainTextDescription": "Represents an object type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeSeriesPropertyV2"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StreamMessage"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "objectSetChanged": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetUpdates"
                  }
                }
              }
            },
            "refreshObjectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RefreshObjectSet"
                  }
                }
              }
            },
            "subscriptionClosed": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionClosed"
                  }
                }
              }
            },
            "subscribeResponses": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetSubscribeResponses"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DoubleVector"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "double",
                      "double": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The vector to search with. The vector must be of the same dimension as the vectors stored in the provided\npropertyIdentifier.\n",
        "plainTextDescription": "The vector to search with. The vector must be of the same dimension as the vectors stored in the provided\npropertyIdentifier.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkTypeApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the link type in the API. To find the API name for your Link Type, check the **Ontology Manager**\napplication.\n",
        "plainTextDescription": "The name of the link type in the API. To find the API name for your Link Type, check the Ontology Manager\napplication.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StructType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "structFieldTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "StructFieldType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an attachment.",
        "plainTextDescription": "The unique resource identifier of an attachment.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchOrderByV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "orderType": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderByType"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "fields": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderingV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies the ordering of search results by a field and an ordering direction or by relevance if scores are required in a nearestNeighbors query. By default `orderType` is set to `fields`.",
        "plainTextDescription": "Specifies the ordering of search results by a field and an ordering direction or by relevance if scores are required in a nearestNeighbors query. By default orderType is set to fields.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryThreeDimensionalAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "groups": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "NestedQueryAggregation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RangeConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "lt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Less than",
                "plainTextDescription": "Less than",
                "example": []
              }
            },
            "lte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Less than or equal",
                "plainTextDescription": "Less than or equal",
                "example": []
              }
            },
            "gt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Greater than",
                "plainTextDescription": "Greater than",
                "example": []
              }
            },
            "gte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Greater than or equal",
                "plainTextDescription": "Greater than or equal",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The parameter value must be within the defined range.\n",
        "plainTextDescription": "The parameter value must be within the defined range.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObjectSetType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectApiName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectTypeApiName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetStreamSubscribeRequests"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "id": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RequestId"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "requests": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectSetStreamSubscribeRequest"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The list of object sets that should be subscribed to. A client can stop subscribing to an object set \nby removing the request from subsequent ObjectSetStreamSubscribeRequests.\n",
        "plainTextDescription": "The list of object sets that should be subscribed to. A client can stop subscribing to an object set\nby removing the request from subsequent ObjectSetStreamSubscribeRequests.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CenterPointTypes"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "Point": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Geo",
                    "localName": "GeoPoint"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceToObjectTypeMappings"
      },
      "type": {
        "type": "map",
        "map": {
          "keyType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "valueType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "InterfaceToObjectTypeMapping"
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Map from object type to the interface-to-object-type mapping for that object type.",
        "plainTextDescription": "Map from object type to the interface-to-object-type mapping for that object type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchOrderByType"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["fields", "relevance"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyOperation"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "approximateDistinct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyApproximateDistinctAggregation"
                  }
                }
              }
            },
            "min": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyMinAggregation"
                  }
                }
              }
            },
            "avg": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyAvgAggregation"
                  }
                }
              }
            },
            "max": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyMaxAggregation"
                  }
                }
              }
            },
            "approximatePercentile": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyApproximatePercentileAggregation"
                  }
                }
              }
            },
            "get": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GetSelectedPropertyOperation"
                  }
                }
              }
            },
            "count": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyCountAggregation"
                  }
                }
              }
            },
            "sum": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertySumAggregation"
                  }
                }
              }
            },
            "collectList": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyCollectListAggregation"
                  }
                }
              }
            },
            "exactDistinct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyExactDistinctAggregation"
                  }
                }
              }
            },
            "collectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyCollectSetAggregation"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Operation on a selected property, can be an aggregation function or retrieval of a single selected property\n",
        "plainTextDescription": "Operation on a selected property, can be an aggregation function or retrieval of a single selected property",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListObjectsResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObject"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of objects in the current page.",
                "plainTextDescription": "The list of objects in the current page.",
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkTypeSideV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReleaseStatus"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "cardinality": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeSideCardinality"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "foreignKeyPropertyApiName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "linkTypeRid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyApproximateDistinctAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes an approximate number of distinct values for the provided field.",
        "plainTextDescription": "Computes an approximate number of distinct values for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CreateLinkRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "linkTypeApiNameAtoB": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "linkTypeApiNameBtoA": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "aSideObjectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "bSideObjectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionParameterType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "interfaceObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyInterfaceObjectType"
                  }
                }
              }
            },
            "struct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyStructType"
                  }
                }
              }
            },
            "string": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "integer": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntegerType"
                  }
                }
              }
            },
            "long": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LongType"
                  }
                }
              }
            },
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectTypeReferenceType"
                  }
                }
              }
            },
            "boolean": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BooleanType"
                  }
                }
              }
            },
            "marking": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MarkingType"
                  }
                }
              }
            },
            "attachment": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentType"
                  }
                }
              }
            },
            "mediaReference": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MediaReferenceType"
                  }
                }
              }
            },
            "array": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionParameterArrayType"
                  }
                }
              }
            },
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectSetType"
                  }
                }
              }
            },
            "object": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the types supported by Ontology Action parameters.\n",
        "plainTextDescription": "A union of all the types supported by Ontology Action parameters.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupBy"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "duration": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationDurationGrouping"
                  }
                }
              }
            },
            "fixedWidth": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationFixedWidthGrouping"
                  }
                }
              }
            },
            "ranges": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationRangesGrouping"
                  }
                }
              }
            },
            "exact": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationExactGrouping"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies a grouping for aggregation results.",
        "plainTextDescription": "Specifies a grouping for aggregation results.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MaxAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the maximum value for the provided field.",
        "plainTextDescription": "Computes the maximum value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MethodObjectSet"
      },
      "type": {
        "type": "reference",
        "reference": {
          "locator": {
            "namespaceName": "Core",
            "localName": "ObjectSet"
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique Resource Identifier (RID) of the Ontology. To look up your Ontology RID, please use the\n`List Ontologies` endpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "The unique Resource Identifier (RID) of the Ontology. To look up your Ontology RID, please use the\nList Ontologies endpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyIdentifier"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "property": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiNameSelector"
                  }
                }
              }
            },
            "structField": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StructFieldSelector"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "An identifier used to select properties or struct fields.",
        "plainTextDescription": "An identifier used to select properties or struct fields.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationRangesGroupingV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "ranges": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationRangeV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups according to specified ranges.",
        "plainTextDescription": "Divides objects into groups according to specified ranges.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ValidateActionResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "result": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValidationResult"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "submissionCriteria": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SubmissionCriteriaEvaluation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterEvaluationResult"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryStructField"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StructFieldName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fieldType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ThreeDimensionalAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "keyType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryAggregationKeyType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "valueType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TwoDimensionalAggregation"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObject"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "properties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "PropertyValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map of the property values of the object.",
                "plainTextDescription": "A map of the property values of the object.",
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an object in the Ontology.",
        "plainTextDescription": "Represents an object in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReleaseStatus"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The description of the object type.",
                "plainTextDescription": "The description of the object type.",
                "example": []
              }
            },
            "visibility": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeVisibility"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "primaryKey": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The primary key of the object. This is a list of properties that can be used to uniquely identify the object.",
                "plainTextDescription": "The primary key of the object. This is a list of properties that can be used to uniquely identify the object.",
                "example": []
              }
            },
            "properties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Property"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map of the properties of the object type.",
                "plainTextDescription": "A map of the properties of the object type.",
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an object type in the Ontology.",
        "plainTextDescription": "Represents an object type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CreateTemporaryObjectSetResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSetRid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "NearestNeighborsQuery"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "vector": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleVector"
                  }
                }
              }
            },
            "text": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "NearestNeighborsQueryText"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Queries support either a vector matching the embedding model defined on the property, or text that is \nautomatically embedded.\n",
        "plainTextDescription": "Queries support either a vector matching the embedding model defined on the property, or text that is\nautomatically embedded.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchJsonQueryV2"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "or": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OrQueryV2"
                  }
                }
              }
            },
            "in": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InQuery"
                  }
                }
              }
            },
            "doesNotIntersectPolygon": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoesNotIntersectPolygonQuery"
                  }
                }
              }
            },
            "lt": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LtQueryV2"
                  }
                }
              }
            },
            "doesNotIntersectBoundingBox": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoesNotIntersectBoundingBoxQuery"
                  }
                }
              }
            },
            "eq": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "EqualsQueryV2"
                  }
                }
              }
            },
            "containsAllTerms": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ContainsAllTermsQuery"
                  }
                }
              }
            },
            "gt": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GtQueryV2"
                  }
                }
              }
            },
            "withinDistanceOf": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "WithinDistanceOfQuery"
                  }
                }
              }
            },
            "withinBoundingBox": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "WithinBoundingBoxQuery"
                  }
                }
              }
            },
            "contains": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ContainsQueryV2"
                  }
                }
              }
            },
            "not": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "NotQueryV2"
                  }
                }
              }
            },
            "intersectsBoundingBox": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntersectsBoundingBoxQuery"
                  }
                }
              }
            },
            "and": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AndQueryV2"
                  }
                }
              }
            },
            "isNull": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IsNullQueryV2"
                  }
                }
              }
            },
            "containsAllTermsInOrderPrefixLastTerm": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ContainsAllTermsInOrderPrefixLastTerm"
                  }
                }
              }
            },
            "containsAnyTerm": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ContainsAnyTermQuery"
                  }
                }
              }
            },
            "gte": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GteQueryV2"
                  }
                }
              }
            },
            "containsAllTermsInOrder": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ContainsAllTermsInOrderQuery"
                  }
                }
              }
            },
            "withinPolygon": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "WithinPolygonQuery"
                  }
                }
              }
            },
            "intersectsPolygon": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntersectsPolygonQuery"
                  }
                }
              }
            },
            "lte": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LteQueryV2"
                  }
                }
              }
            },
            "startsWith": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StartsWithQuery"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Property"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "baseType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValueType"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Details about some property of an object.",
        "plainTextDescription": "Details about some property of an object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LoadObjectSetV2MultipleObjectTypesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObjectV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of objects in the current page.",
                "plainTextDescription": "The list of objects in the current page.",
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "interfaceToObjectTypeMappings": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceToObjectTypeMappings"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the API response when loading an `ObjectSet`. An `interfaceToObjectTypeMappings` field is \noptionally returned if the type scope of the returned object set includes any interfaces. The \"type scope\"\nof an object set refers to whether objects contain all their properties (object-type type scope) or just the\nproperties that implement interface properties (interface type scope). There can be multiple type scopes in a\nsingle object set- some objects may have all their properties and some may only have interface properties.\n\nThe `interfaceToObjectTypeMappings` field contains mappings from `SharedPropertyTypeApiName`s on the interface(s) to \n`PropertyApiName` for properties on the object(s).\n",
        "plainTextDescription": "Represents the API response when loading an ObjectSet. An interfaceToObjectTypeMappings field is\noptionally returned if the type scope of the returned object set includes any interfaces. The \"type scope\"\nof an object set refers to whether objects contain all their properties (object-type type scope) or just the\nproperties that implement interface properties (interface type scope). There can be multiple type scopes in a\nsingle object set- some objects may have all their properties and some may only have interface properties.\nThe interfaceToObjectTypeMappings field contains mappings from SharedPropertyTypeApiNames on the interface(s) to\nPropertyApiName for properties on the object(s).",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "WithinDistanceOfQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CenterPoint"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains a point within the distance provided of the center point.\nAllows you to specify a property to query on by a variety of means. Either `field` or `propertyIdentifier` \nmust be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field contains a point within the distance provided of the center point.\nAllows you to specify a property to query on by a variety of means. Either field or propertyIdentifier\nmust be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchObjectsRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "where": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQueryV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "orderBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageSize": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageSize"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "pageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "select": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The API names of the object type properties to include in the response.\n",
                "plainTextDescription": "The API names of the object type properties to include in the response.",
                "example": []
              }
            },
            "excludeRid": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "boolean",
                      "boolean": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "A flag to exclude the retrieval of the `__rid` property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.\n",
                "plainTextDescription": "A flag to exclude the retrieval of the __rid property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentMetadataResponse"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "single": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentV2"
                  }
                }
              }
            },
            "multiple": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ListAttachmentsResponseV2"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The attachment metadata response",
        "plainTextDescription": "The attachment metadata response",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FilterValue"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the value of a property filter. For instance, false is the FilterValue in\n`properties.{propertyApiName}.isNull=false`.\n",
        "plainTextDescription": "Represents the value of a property filter. For instance, false is the FilterValue in\nproperties.{propertyApiName}.isNull=false.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LoadObjectSetV2ObjectsOrInterfacesRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "orderBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "select": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SelectedPropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "pageSize": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageSize"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "excludeRid": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "boolean",
                      "boolean": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "A flag to exclude the retrieval of the `$rid` property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.\n",
                "plainTextDescription": "A flag to exclude the retrieval of the $rid property.\nSetting this to true may improve performance of this endpoint for object types in OSV2.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the API POST body when loading an `ObjectSet`. Used on the `/loadObjectsOrInterfaces` endpoint only.\n",
        "plainTextDescription": "Represents the API POST body when loading an ObjectSet. Used on the /loadObjectsOrInterfaces endpoint only.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListActionTypesResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionTypeV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkTypeSideCardinality"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ONE", "MANY"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FunctionVersion"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The version of the given Function, written `<major>.<minor>.<patch>-<tag>`, where `-<tag>` is optional.\nExamples: `1.2.3`, `1.2.3-rc1`.\n",
        "plainTextDescription": "The version of the given Function, written <major>.<minor>.<patch>-<tag>, where -<tag> is optional.\nExamples: 1.2.3, 1.2.3-rc1.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RefreshObjectSet"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "id": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionId"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The list of updated Foundry Objects cannot be provided. The object set must be refreshed using Object Set Service.\n",
        "plainTextDescription": "The list of updated Foundry Objects cannot be provided. The object set must be refreshed using Object Set Service.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceLinkTypeLinkedEntityApiName"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkedObjectTypeApiName"
                  }
                }
              }
            },
            "interfaceTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkedInterfaceTypeApiName"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A reference to the linked entity. This can either be an object or an interface type.",
        "plainTextDescription": "A reference to the linked entity. This can either be an object or an interface type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BatchApplyActionRequestOptions"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "returnEdits": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ReturnEditsMode"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyMapType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "keyType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "valueType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The unique identifier of the parameter. Parameters are used as inputs when an action or query is applied.\nParameters can be viewed and managed in the **Ontology Manager**.\n",
        "plainTextDescription": "The unique identifier of the parameter. Parameters are used as inputs when an action or query is applied.\nParameters can be viewed and managed in the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyTypeVisibility"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["NORMAL", "PROMINENT", "HIDDEN"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The description of the interface.",
                "plainTextDescription": "The description of the interface.",
                "example": []
              }
            },
            "properties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from a shared property type API name to the corresponding shared property type. The map describes the \nset of properties the interface has. A shared property type must be unique across all of the properties.\n",
                "plainTextDescription": "A map from a shared property type API name to the corresponding shared property type. The map describes the\nset of properties the interface has. A shared property type must be unique across all of the properties.",
                "example": []
              }
            },
            "allProperties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from a shared property type API name to the corresponding shared property type. The map describes the \nset of properties the interface has, including properties from all directly and indirectly extended \ninterfaces.\n",
                "plainTextDescription": "A map from a shared property type API name to the corresponding shared property type. The map describes the\nset of properties the interface has, including properties from all directly and indirectly extended\ninterfaces.",
                "example": []
              }
            },
            "extendsInterfaces": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of interface API names that this interface extends. An interface can extend other interfaces to \ninherit their properties.\n",
                "plainTextDescription": "A list of interface API names that this interface extends. An interface can extend other interfaces to\ninherit their properties.",
                "example": []
              }
            },
            "allExtendsInterfaces": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of interface API names that this interface extends, both directly and indirectly.\n",
                "plainTextDescription": "A list of interface API names that this interface extends, both directly and indirectly.",
                "example": []
              }
            },
            "implementedByObjectTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of object API names that implement this interface.\n",
                "plainTextDescription": "A list of object API names that implement this interface.",
                "example": []
              }
            },
            "links": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceLinkTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceLinkType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from an interface link type API name to the corresponding interface link type. The map describes the\nset of link types the interface has.\n",
                "plainTextDescription": "A map from an interface link type API name to the corresponding interface link type. The map describes the\nset of link types the interface has.",
                "example": []
              }
            },
            "allLinks": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceLinkTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceLinkType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from an interface link type API name to the corresponding interface link type. The map describes the\nset of link types the interface has, including links from all directly and indirectly extended interfaces.\n",
                "plainTextDescription": "A map from an interface link type API name to the corresponding interface link type. The map describes the\nset of link types the interface has, including links from all directly and indirectly extended interfaces.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an interface type in the Ontology.",
        "plainTextDescription": "Represents an interface type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyInterface"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier for an action.",
        "plainTextDescription": "The unique resource identifier for an action.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DeprecatedPropertyTypeStatus"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "message": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "deadline": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "datetime",
                  "datetime": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "replacedBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyTypeRid"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "This status indicates that the PropertyType is reaching the end of its life and will be removed as per the\ndeadline specified.\n",
        "plainTextDescription": "This status indicates that the PropertyType is reaching the end of its life and will be removed as per the\ndeadline specified.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListQueryTypesResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryTypeV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectUpdate"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "object": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectV2"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "state": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectState"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SdkPackageName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the object type in the API in camelCase format. To find the API name for your Object Type, use the\n`List object types` endpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "The name of the object type in the API in camelCase format. To find the API name for your Object Type, use the\nList object types endpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkSideObject"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "primaryKey": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListObjectTypesV2Response"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of object types in the current page.",
                "plainTextDescription": "The list of object types in the current page.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceLinkTypeApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A string indicating the API name to use for the interface link.",
        "plainTextDescription": "A string indicating the API name to use for the interface link.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectsResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "excludedItems": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "integer",
                      "integer": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregateObjectsResponseItem"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SubmissionCriteriaEvaluation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "configuredFailureMessage": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The message indicating one of the **submission criteria** was not satisfied.\nThis is configured per **submission criteria** in the **Ontology Manager**.\n",
                "plainTextDescription": "The message indicating one of the submission criteria was not satisfied.\nThis is configured per submission criteria in the Ontology Manager.",
                "example": []
              }
            },
            "result": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValidationResult"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Contains the status of the **submission criteria**.\n**Submission criteria** are the prerequisites that need to be satisfied before an Action can be applied.\nThese are configured in the **Ontology Manager**.\n",
        "plainTextDescription": "Contains the status of the submission criteria.\nSubmission criteria are the prerequisites that need to be satisfied before an Action can be applied.\nThese are configured in the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SumAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the sum of values for the provided field.",
        "plainTextDescription": "Computes the sum of values for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObjectSet"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApplyActionMode"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["VALIDATE_ONLY", "VALIDATE_AND_EXECUTE"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CreateInterfaceObjectRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "interfaceTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetStaticType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objects": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectRid"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DeleteObjectRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyApiNameSelector"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A property api name that references properties to query on.",
        "plainTextDescription": "A property api name that references properties to query on.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GtQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is greater than a value.",
        "plainTextDescription": "Returns objects where the specified field is greater than a value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectPropertyType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "struct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StructType"
                  }
                }
              }
            },
            "string": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringType"
                  }
                }
              }
            },
            "byte": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ByteType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "geopoint": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GeoPointType"
                  }
                }
              }
            },
            "geotimeSeriesReference": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GeotimeSeriesReferenceType"
                  }
                }
              }
            },
            "integer": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntegerType"
                  }
                }
              }
            },
            "float": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FloatType"
                  }
                }
              }
            },
            "geoshape": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GeoShapeType"
                  }
                }
              }
            },
            "long": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LongType"
                  }
                }
              }
            },
            "boolean": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BooleanType"
                  }
                }
              }
            },
            "cipherText": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CipherTextType"
                  }
                }
              }
            },
            "marking": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MarkingType"
                  }
                }
              }
            },
            "attachment": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentType"
                  }
                }
              }
            },
            "mediaReference": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MediaReferenceType"
                  }
                }
              }
            },
            "timeseries": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimeseriesType"
                  }
                }
              }
            },
            "array": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectArrayType"
                  }
                }
              }
            },
            "short": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ShortType"
                  }
                }
              }
            },
            "vector": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "VectorType"
                  }
                }
              }
            },
            "decimal": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DecimalType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the types supported by Ontology Object properties.\n",
        "plainTextDescription": "A union of all the types supported by Ontology Object properties.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeseriesSyncRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The RID identifying a time series sync.",
        "plainTextDescription": "The RID identifying a time series sync.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionParameterV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "dataType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionParameterType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "required": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Details about a parameter of an action.",
        "plainTextDescription": "Details about a parameter of an action.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceToObjectTypeMapping"
      },
      "type": {
        "type": "map",
        "map": {
          "keyType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "SharedPropertyTypeApiName"
              }
            }
          },
          "valueType": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an implementation of an interface (the mapping of interface property to local property).",
        "plainTextDescription": "Represents an implementation of an interface (the mapping of interface property to local property).",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StreamingOutputFormat"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["JSON", "ARROW"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Which format to serialize the binary stream in.\nARROW is more efficient for streaming a large sized response.\n",
        "plainTextDescription": "Which format to serialize the binary stream in.\nARROW is more efficient for streaming a large sized response.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchOrdering"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "Specifies the ordering direction (can be either `asc` or `desc`)",
                "plainTextDescription": "Specifies the ordering direction (can be either asc or desc)",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StringLengthConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "lt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Less than",
                "plainTextDescription": "Less than",
                "example": []
              }
            },
            "lte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Less than or equal",
                "plainTextDescription": "Less than or equal",
                "example": []
              }
            },
            "gt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Greater than",
                "plainTextDescription": "Greater than",
                "example": []
              }
            },
            "gte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Greater than or equal",
                "plainTextDescription": "Greater than or equal",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The parameter value must have a length within the defined range.\n*This range is always inclusive.*\n",
        "plainTextDescription": "The parameter value must have a length within the defined range.\nThis range is always inclusive.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyCollectSetAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "limit": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "Maximum number of values to collect. The maximum supported limit is 100.\n",
                "plainTextDescription": "Maximum number of values to collect. The maximum supported limit is 100.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Lists all distinct values of a property up to the specified limit. The maximum supported limit is 100.\n\nNOTE: A separate cardinality / exactCardinality aggregation should be used to determine the total count of\nvalues, to account for a possible truncation of the returned set.\n\nIgnores objects for which a property is absent, so the returned list will contain non-null values only.\nReturns an empty list when none of the objects have values for a provided property.\n",
        "plainTextDescription": "Lists all distinct values of a property up to the specified limit. The maximum supported limit is 100.\nNOTE: A separate cardinality / exactCardinality aggregation should be used to determine the total count of\nvalues, to account for a possible truncation of the returned set.\nIgnores objects for which a property is absent, so the returned list will contain non-null values only.\nReturns an empty list when none of the objects have values for a provided property.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the Query in the API.\n",
        "plainTextDescription": "The name of the Query in the API.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PhraseQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains the provided value as a substring.",
        "plainTextDescription": "Returns objects where the specified field contains the provided value as a substring.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryTwoDimensionalAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "groups": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryAggregation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ValueType"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "A string indicating the type of each data value. Note that these types can be nested, for example an array of\nstructs.\n\n| Type                | JSON value                                                                                                        |\n|---------------------|-------------------------------------------------------------------------------------------------------------------|\n| Array               | `Array<T>`, where `T` is the type of the array elements, e.g. `Array<String>`.                                    |\n| Attachment          | `Attachment`                                                                                                      |\n| Boolean             | `Boolean`                                                                                                         |\n| Byte                | `Byte`                                                                                                            |\n| CipherText          | `CipherText`                                                                                                      |\n| Date                | `LocalDate`                                                                                                       |\n| Decimal             | `Decimal`                                                                                                         |\n| Double              | `Double`                                                                                                          |\n| Float               | `Float`                                                                                                           |\n| Integer             | `Integer`                                                                                                         |\n| Long                | `Long`                                                                                                            |\n| Marking             | `Marking`                                                                                                         |\n| OntologyObject      | `OntologyObject<T>` where `T` is the API name of the referenced object type.                                      |\n| Short               | `Short`                                                                                                           |\n| String              | `String`                                                                                                          |\n| Struct              | `Struct<T>` where `T` contains field name and type pairs, e.g. `Struct<{ firstName: String, lastName: string }>`  |\n| Timeseries          | `TimeSeries<T>` where `T` is either `String` for an enum series or `Double` for a numeric series.                 |\n| Timestamp           | `Timestamp`                                                                                                       |\n",
        "plainTextDescription": "A string indicating the type of each data value. Note that these types can be nested, for example an array of\nstructs.\n| Type                | JSON value                                                                                                        |\n|---------------------|-------------------------------------------------------------------------------------------------------------------|\n| Array               | Array<T>, where T is the type of the array elements, e.g. Array<String>.                                    |\n| Attachment          | Attachment                                                                                                      |\n| Boolean             | Boolean                                                                                                         |\n| Byte                | Byte                                                                                                            |\n| CipherText          | CipherText                                                                                                      |\n| Date                | LocalDate                                                                                                       |\n| Decimal             | Decimal                                                                                                         |\n| Double              | Double                                                                                                          |\n| Float               | Float                                                                                                           |\n| Integer             | Integer                                                                                                         |\n| Long                | Long                                                                                                            |\n| Marking             | Marking                                                                                                         |\n| OntologyObject      | OntologyObject<T> where T is the API name of the referenced object type.                                      |\n| Short               | Short                                                                                                           |\n| String              | String                                                                                                          |\n| Struct              | Struct<T> where T contains field name and type pairs, e.g. Struct<{ firstName: String, lastName: string }>  |\n| Timeseries          | TimeSeries<T> where T is either String for an enum series or Double for a numeric series.                 |\n| Timestamp           | Timestamp                                                                                                       |",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkedInterfaceTypeApiName"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A reference to the linked interface type.",
        "plainTextDescription": "A reference to the linked interface type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApproximateDistinctAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes an approximate number of distinct values for the provided field.",
        "plainTextDescription": "Computes an approximate number of distinct values for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SharedPropertyType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SharedPropertyTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SharedPropertyTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A short text that describes the SharedPropertyType.",
                "plainTextDescription": "A short text that describes the SharedPropertyType.",
                "example": []
              }
            },
            "dataType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectPropertyType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A property type that can be shared across object types.",
        "plainTextDescription": "A property type that can be shared across object types.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Error"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "error": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ErrorName"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "args": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Arg"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AndQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQueryV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where every query is satisfied.",
        "plainTextDescription": "Returns objects where every query is satisfied.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectQueryResultConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The parameter value must be the primary key of an object found within an object set.\n",
        "plainTextDescription": "The parameter value must be the primary key of an object found within an object set.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListOutgoingLinkTypesResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "LinkTypeSideV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of link type sides in the current page.",
                "plainTextDescription": "The list of link type sides in the current page.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ModifyObject"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "primaryKey": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RelativeTimeRange"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "startTime": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "RelativeTime"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "endTime": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "RelativeTime"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A relative time range for a time series query.\n",
        "plainTextDescription": "A relative time range for a time series query.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SyncApplyActionResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "validation": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ValidateActionResponseV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "edits": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionResults"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Fuzzy"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "boolean",
          "boolean": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Setting fuzzy to `true` allows approximate matching in search queries that support it.",
        "plainTextDescription": "Setting fuzzy to true allows approximate matching in search queries that support it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationMetricName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A user-specified alias for an aggregation metric name.",
        "plainTextDescription": "A user-specified alias for an aggregation metric name.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetAsTypeType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "entityType": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An object type or interface type API name.\n",
                "plainTextDescription": "An object type or interface type API name.",
                "example": []
              }
            },
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Casts an object set to a specified object type or interface type API name. Any object whose object type does \nnot match the object type provided or implement the interface type provided will be dropped from the resulting \nobject set. This is currently unsupported and an exception will be thrown if used.\n",
        "plainTextDescription": "Casts an object set to a specified object type or interface type API name. Any object whose object type does\nnot match the object type provided or implement the interface type provided will be dropped from the resulting\nobject set. This is currently unsupported and an exception will be thrown if used.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LtQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is less than a value. Allows you to specify a property to query on \nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field is less than a value. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryAggregationRange"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "startValue": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Inclusive start.",
                "plainTextDescription": "Inclusive start.",
                "example": []
              }
            },
            "endValue": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Exclusive end.",
                "plainTextDescription": "Exclusive end.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies a range from an inclusive start value to an exclusive end value.",
        "plainTextDescription": "Specifies a range from an inclusive start value to an exclusive end value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CustomTypeId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "A UUID representing a custom type in a given Function.\n",
        "plainTextDescription": "A UUID representing a custom type in a given Function.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MinAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the minimum value for the provided field.",
        "plainTextDescription": "Computes the minimum value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ModifyInterfaceObjectRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "interfaceTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryStructType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "fields": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryStructField"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DerivedTimeSeriesProperty"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "templateRid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimeseriesTemplateRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "templateVersion": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "TimeseriesTemplateVersion"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The representation of a time series property backed by a derived time series calculated with a formula.",
        "plainTextDescription": "The representation of a time series property backed by a derived time series calculated with a formula.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeUnit"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS", "WEEKS", "MONTHS", "YEARS", "QUARTERS"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyValue"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "any",
          "any": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the value of a property in the following format.\n\n| Type            | JSON encoding                                               | Example                                                                                            |\n|---------------- |-------------------------------------------------------------|----------------------------------------------------------------------------------------------------|\n| Array           | array                                                       | `[\"alpha\", \"bravo\", \"charlie\"]`                                                                    |\n| Attachment      | JSON encoded `AttachmentProperty` object                    | `{\"rid\":\"ri.blobster.main.attachment.2f944bae-5851-4204-8615-920c969a9f2e\"}`                       |\n| Boolean         | boolean                                                     | `true`                                                                                             |\n| Byte            | number                                                      | `31`                                                                                               |\n| CipherText      | string                                                      | `\"CIPHER::ri.bellaso.main.cipher-channel.e414ab9e-b606-499a-a0e1-844fa296ba7e::unzjs3VifsTxuIpf1fH1CJ7OaPBr2bzMMdozPaZJtCii8vVG60yXIEmzoOJaEl9mfFFe::CIPHER\"`                                                                                                                                                                                        |        \n| Date            | ISO 8601 extended local date string                         | `\"2021-05-01\"`                                                                                     |\n| Decimal         | string                                                      | `\"2.718281828\"`                                                                                    |\n| Double          | number                                                      | `3.14159265`                                                                                       |\n| Float           | number                                                      | `3.14159265`                                                                                       |\n| GeoPoint        | geojson                                                     | `{\"type\":\"Point\",\"coordinates\":[102.0,0.5]}`                                                       |\n| GeoShape        | geojson                                                     | `{\"type\":\"LineString\",\"coordinates\":[[102.0,0.0],[103.0,1.0],[104.0,0.0],[105.0,1.0]]}`            |\n| Integer         | number                                                      | `238940`                                                                                           |\n| Long            | string                                                      | `\"58319870951433\"`                                                                                 |\n| MediaReference  | JSON encoded `MediaReference` object                        | `{\"mimeType\":\"application/pdf\",\"reference\":{\"type\":\"mediaSetViewItem\",\"mediaSetViewItem\":{\"mediaSetRid\":\"ri.mio.main.media-set.4153d42f-ca4b-4e42-8ca5-8e6aa7edb642\",\"mediaSetViewRid\":\"ri.mio.main.view.82a798ad-d637-4595-acc6-987bcf16629b\",\"mediaItemRid\":\"ri.mio.main.media-item.001ec98b-1620-4814-9e17-8e9c4e536225\"}}}`                       |\n| Short           | number                                                      | `8739`                                                                                             |\n| String          | string                                                      | `\"Call me Ishmael\"`                                                                                |\n| Struct          | JSON object of struct field API name -> value               | {\"firstName\": \"Alex\", \"lastName\": \"Karp\"}                                                          |\n| Timestamp       | ISO 8601 extended offset date-time string in UTC zone       | `\"2021-01-04T05:00:00Z\"`                                                                           |\n| Timeseries      | JSON encoded `TimeseriesProperty` object or seriesId string | `{\"seriesId\": \"wellPressureSeriesId\", \"syncRid\": ri.time-series-catalog.main.sync.04f5ac1f-91bf-44f9-a51f-4f34e06e42df\"}` or `{\"templateRid\": \"ri.codex-emu.main.template.367cac64-e53b-4653-b111-f61856a63df9\", \"templateVersion\": \"0.0.0\"}` or `\"wellPressureSeriesId\"`|                                                                           |\n\nNote that for backwards compatibility, the Boolean, Byte, Double, Float, Integer, and Short types can also be encoded as JSON strings.\n",
        "plainTextDescription": "Represents the value of a property in the following format.\n| Type            | JSON encoding                                               | Example                                                                                            |\n|---------------- |-------------------------------------------------------------|----------------------------------------------------------------------------------------------------|\n| Array           | array                                                       | [\"alpha\", \"bravo\", \"charlie\"]                                                                    |\n| Attachment      | JSON encoded AttachmentProperty object                    | {\"rid\":\"ri.blobster.main.attachment.2f944bae-5851-4204-8615-920c969a9f2e\"}                       |\n| Boolean         | boolean                                                     | true                                                                                             |\n| Byte            | number                                                      | 31                                                                                               |\n| CipherText      | string                                                      | \"CIPHER::ri.bellaso.main.cipher-channel.e414ab9e-b606-499a-a0e1-844fa296ba7e::unzjs3VifsTxuIpf1fH1CJ7OaPBr2bzMMdozPaZJtCii8vVG60yXIEmzoOJaEl9mfFFe::CIPHER\"                                                                                                                                                                                        |\n\n| Date            | ISO 8601 extended local date string                         | \"2021-05-01\"                                                                                     |\n| Decimal         | string                                                      | \"2.718281828\"                                                                                    |\n| Double          | number                                                      | 3.14159265                                                                                       |\n| Float           | number                                                      | 3.14159265                                                                                       |\n| GeoPoint        | geojson                                                     | {\"type\":\"Point\",\"coordinates\":[102.0,0.5]}                                                       |\n| GeoShape        | geojson                                                     | {\"type\":\"LineString\",\"coordinates\":[[102.0,0.0],[103.0,1.0],[104.0,0.0],[105.0,1.0]]}            |\n| Integer         | number                                                      | 238940                                                                                           |\n| Long            | string                                                      | \"58319870951433\"                                                                                 |\n| MediaReference  | JSON encoded MediaReference object                        | {\"mimeType\":\"application/pdf\",\"reference\":{\"type\":\"mediaSetViewItem\",\"mediaSetViewItem\":{\"mediaSetRid\":\"ri.mio.main.media-set.4153d42f-ca4b-4e42-8ca5-8e6aa7edb642\",\"mediaSetViewRid\":\"ri.mio.main.view.82a798ad-d637-4595-acc6-987bcf16629b\",\"mediaItemRid\":\"ri.mio.main.media-item.001ec98b-1620-4814-9e17-8e9c4e536225\"}}}                       |\n| Short           | number                                                      | 8739                                                                                             |\n| String          | string                                                      | \"Call me Ishmael\"                                                                                |\n| Struct          | JSON object of struct field API name -> value               | {\"firstName\": \"Alex\", \"lastName\": \"Karp\"}                                                          |\n| Timestamp       | ISO 8601 extended offset date-time string in UTC zone       | \"2021-01-04T05:00:00Z\"                                                                           |\n| Timeseries      | JSON encoded TimeseriesProperty object or seriesId string | {\"seriesId\": \"wellPressureSeriesId\", \"syncRid\": ri.time-series-catalog.main.sync.04f5ac1f-91bf-44f9-a51f-4f34e06e42df\"} or {\"templateRid\": \"ri.codex-emu.main.template.367cac64-e53b-4653-b111-f61856a63df9\", \"templateVersion\": \"0.0.0\"} or \"wellPressureSeriesId\"|                                                                           |\nNote that for backwards compatibility, the Boolean, Byte, Double, Float, Integer, and Short types can also be encoded as JSON strings.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StreamTimeSeriesPointsRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "range": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "TimeRange"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSet"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "searchAround": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetSearchAroundType"
                  }
                }
              }
            },
            "static": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetStaticType"
                  }
                }
              }
            },
            "intersect": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetIntersectionType"
                  }
                }
              }
            },
            "withProperties": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetWithPropertiesType"
                  }
                }
              }
            },
            "subtract": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetSubtractType"
                  }
                }
              }
            },
            "nearestNeighbors": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetNearestNeighborsType"
                  }
                }
              }
            },
            "union": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetUnionType"
                  }
                }
              }
            },
            "asType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetAsTypeType"
                  }
                }
              }
            },
            "methodInput": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetMethodInputType"
                  }
                }
              }
            },
            "reference": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetReferenceType"
                  }
                }
              }
            },
            "filter": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetFilterType"
                  }
                }
              }
            },
            "interfaceBase": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetInterfaceBaseType"
                  }
                }
              }
            },
            "asBaseObjectTypes": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetAsBaseObjectTypesType"
                  }
                }
              }
            },
            "base": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSetBaseType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the definition of an `ObjectSet` in the `Ontology`.",
        "plainTextDescription": "Represents the definition of an ObjectSet in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SubscriptionError"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "errors": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Error"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetUpdates"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "id": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionId"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "updates": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectSetUpdate"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Arg"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectsRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "aggregation": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Aggregation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "query": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQuery"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "groupBy": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupBy"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApplyActionResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BatchApplyActionResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncApplyActionOperationV2"
      },
      "type": {
        "type": "asyncOperation",
        "asyncOperation": {
          "operationType": "applyActionAsyncV2",
          "resultType": {
            "locator": {
              "namespaceName": "Core",
              "localName": "AsyncApplyActionOperationResponseV2"
            }
          },
          "stageType": {
            "locator": {
              "namespaceName": "Core",
              "localName": "AsyncActionStatus"
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectsRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "aggregation": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "where": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQueryV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "groupBy": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "accuracy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationAccuracyRequest"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "IsNullQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects based on the existence of the specified field.",
        "plainTextDescription": "Returns objects based on the existence of the specified field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MediaReferenceProperty"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RelativeTime"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "when": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RelativeTimeRelation"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "unit": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RelativeTimeSeriesTimeUnit"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A relative time, such as \"3 days before\" or \"2 hours after\" the current moment.\n",
        "plainTextDescription": "A relative time, such as \"3 days before\" or \"2 hours after\" the current moment.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertySumAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the sum of values for the provided field.",
        "plainTextDescription": "Computes the sum of values for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryAggregationValueType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the types supported by query aggregation keys.\n",
        "plainTextDescription": "A union of all the types supported by query aggregation keys.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyValueEscapedString"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the value of a property in string format. This is used in URL parameters.",
        "plainTextDescription": "Represents the value of a property in string format. This is used in URL parameters.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DoesNotIntersectBoundingBoxQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BoundingBoxValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field does not intersect the bounding box provided. Allows you to specify a \nproperty to query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not \nboth.\n",
        "plainTextDescription": "Returns objects where the specified field does not intersect the bounding box provided. Allows you to specify a\nproperty to query on by a variety of means. Either field or propertyIdentifier must be supplied, but not\nboth.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CreateTemporaryObjectSetRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectEdits"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "edits": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectEdit"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "addedObjectCount": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "modifiedObjectsCount": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "deletedObjectsCount": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "addedLinksCount": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "deletedLinksCount": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ReasonType"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["USER_CLOSED", "CHANNEL_CLOSED"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Represents the reason a subscription was closed.\n",
        "plainTextDescription": "Represents the reason a subscription was closed.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GroupMemberConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The parameter value must be the user id of a member belonging to at least one of the groups defined by the constraint.\n",
        "plainTextDescription": "The parameter value must be the user id of a member belonging to at least one of the groups defined by the constraint.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetSubscribeResponse"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "qos": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QosError"
                  }
                }
              }
            },
            "success": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionSuccess"
                  }
                }
              }
            },
            "error": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionError"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryAggregationKeyType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "boolean": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BooleanType"
                  }
                }
              }
            },
            "string": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "range": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryAggregationRangeType"
                  }
                }
              }
            },
            "integer": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntegerType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the types supported by query aggregation keys.\n",
        "plainTextDescription": "A union of all the types supported by query aggregation keys.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupByV2"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "duration": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationDurationGroupingV2"
                  }
                }
              }
            },
            "fixedWidth": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationFixedWidthGroupingV2"
                  }
                }
              }
            },
            "ranges": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationRangesGroupingV2"
                  }
                }
              }
            },
            "exact": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AggregationExactGroupingV2"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies a grouping for aggregation results.",
        "plainTextDescription": "Specifies a grouping for aggregation results.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LoadObjectSetResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObjectV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of objects in the current Page.",
                "plainTextDescription": "The list of objects in the current Page.",
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the API response when loading an `ObjectSet`.",
        "plainTextDescription": "Represents the API response when loading an ObjectSet.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchObjectsResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObject"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentProperty"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The representation of an attachment as a data type.",
        "plainTextDescription": "The representation of an attachment as a data type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The immutable ID of a property. Property IDs are only used to identify properties in the **Ontology Manager**\napplication and assign them API names. In every other case, API names should be used instead of property IDs.\n",
        "plainTextDescription": "The immutable ID of a property. Property IDs are only used to identify properties in the Ontology Manager\napplication and assign them API names. In every other case, API names should be used instead of property IDs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BatchApplyActionRequestItem"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterOption"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An allowed configured value for a parameter within an action.",
                "plainTextDescription": "An allowed configured value for a parameter within an action.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A possible value for the parameter. This is defined in the **Ontology Manager** by Actions admins.\n",
        "plainTextDescription": "A possible value for the parameter. This is defined in the Ontology Manager by Actions admins.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologySetType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "itemType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CountAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the total count of objects.",
        "plainTextDescription": "Computes the total count of objects.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PolygonValue"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "Polygon": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Geo",
                    "localName": "Polygon"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GteQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is greater than or equal to a value.",
        "plainTextDescription": "Returns objects where the specified field is greater than or equal to a value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RelativeTimeSeriesTimeUnit"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS", "WEEKS", "MONTHS", "YEARS"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DataValue"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "any",
          "any": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the value of data in the following format. Note that these values can be nested, for example an array of structs.\n| Type                                | JSON encoding                                         | Example                                                                                                                                                       |\n|-------------------------------------|-------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Array                               | array                                                 | `[\"alpha\", \"bravo\", \"charlie\"]`                                                                                                                               |\n| Attachment                          | string                                                | `\"ri.attachments.main.attachment.2f944bae-5851-4204-8615-920c969a9f2e\"`                                                                                       |\n| Boolean                             | boolean                                               | `true`                                                                                                                                                        |\n| Byte                                | number                                                | `31`                                                                                                                                                          |\n| CipherText                          | string                                                | `\"CIPHER::ri.bellaso.main.cipher-channel.e414ab9e-b606-499a-a0e1-844fa296ba7e::unzjs3VifsTxuIpf1fH1CJ7OaPBr2bzMMdozPaZJtCii8vVG60yXIEmzoOJaEl9mfFFe::CIPHER\"` |\n| Date                                | ISO 8601 extended local date string                   | `\"2021-05-01\"`                                                                                                                                                |\n| Decimal                             | string                                                | `\"2.718281828\"`                                                                                                                                               |\n| Float                               | number                                                | `3.14159265`                                                                                                                                                  |\n| Double                              | number                                                | `3.14159265`                                                                                                                                                  |\n| Integer                             | number                                                | `238940`                                                                                                                                                      |\n| Long                                | string                                                | `\"58319870951433\"`                                                                                                                                            |\n| Marking                             | string                                                | `\"MU\"`                                                                                                                                                        |\n| Null                                | null                                                  | `null`                                                                                                                                                        |\n| Object Set                          | string OR the object set definition                   | `ri.object-set.main.versioned-object-set.h13274m8-23f5-431c-8aee-a4554157c57z`                                                                                |\n| Ontology Object Reference           | JSON encoding of the object's primary key             | `10033123` or `\"EMP1234\"`                                                                                                                                     |\n| Ontology Interface Object Reference | JSON encoding of the object's api name and primary key| `{\"objectTypeApiName\":\"Employee\", \"primaryKeyValue\":\"EMP1234\"}`                                                                                               |\n| Ontology Object Type Reference      | string of the object type's api name                  | `\"Employee\"`                                                                                                                                                  |\n| Set                                 | array                                                 | `[\"alpha\", \"bravo\", \"charlie\"]`                                                                                                                               |\n| Short                               | number                                                | `8739`                                                                                                                                                        |\n| String                              | string                                                | `\"Call me Ishmael\"`                                                                                                                                           |\n| Struct                              | JSON object                                           | `{\"name\": \"John Doe\", \"age\": 42}`                                                                                                                             |\n| TwoDimensionalAggregation           | JSON object                                           | `{\"groups\": [{\"key\": \"alpha\", \"value\": 100}, {\"key\": \"beta\", \"value\": 101}]}`                                                                                 |\n| ThreeDimensionalAggregation         | JSON object                                           | `{\"groups\": [{\"key\": \"NYC\", \"groups\": [{\"key\": \"Engineer\", \"value\" : 100}]}]}`                                                                                |\n| Timestamp                           | ISO 8601 extended offset date-time string in UTC zone | `\"2021-01-04T05:00:00Z\"`                                                                                                                                      |\n",
        "plainTextDescription": "Represents the value of data in the following format. Note that these values can be nested, for example an array of structs.\n| Type                                | JSON encoding                                         | Example                                                                                                                                                       |\n|-------------------------------------|-------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Array                               | array                                                 | [\"alpha\", \"bravo\", \"charlie\"]                                                                                                                               |\n| Attachment                          | string                                                | \"ri.attachments.main.attachment.2f944bae-5851-4204-8615-920c969a9f2e\"                                                                                       |\n| Boolean                             | boolean                                               | true                                                                                                                                                        |\n| Byte                                | number                                                | 31                                                                                                                                                          |\n| CipherText                          | string                                                | \"CIPHER::ri.bellaso.main.cipher-channel.e414ab9e-b606-499a-a0e1-844fa296ba7e::unzjs3VifsTxuIpf1fH1CJ7OaPBr2bzMMdozPaZJtCii8vVG60yXIEmzoOJaEl9mfFFe::CIPHER\" |\n| Date                                | ISO 8601 extended local date string                   | \"2021-05-01\"                                                                                                                                                |\n| Decimal                             | string                                                | \"2.718281828\"                                                                                                                                               |\n| Float                               | number                                                | 3.14159265                                                                                                                                                  |\n| Double                              | number                                                | 3.14159265                                                                                                                                                  |\n| Integer                             | number                                                | 238940                                                                                                                                                      |\n| Long                                | string                                                | \"58319870951433\"                                                                                                                                            |\n| Marking                             | string                                                | \"MU\"                                                                                                                                                        |\n| Null                                | null                                                  | null                                                                                                                                                        |\n| Object Set                          | string OR the object set definition                   | ri.object-set.main.versioned-object-set.h13274m8-23f5-431c-8aee-a4554157c57z                                                                                |\n| Ontology Object Reference           | JSON encoding of the object's primary key             | 10033123 or \"EMP1234\"                                                                                                                                     |\n| Ontology Interface Object Reference | JSON encoding of the object's api name and primary key| {\"objectTypeApiName\":\"Employee\", \"primaryKeyValue\":\"EMP1234\"}                                                                                               |\n| Ontology Object Type Reference      | string of the object type's api name                  | \"Employee\"                                                                                                                                                  |\n| Set                                 | array                                                 | [\"alpha\", \"bravo\", \"charlie\"]                                                                                                                               |\n| Short                               | number                                                | 8739                                                                                                                                                        |\n| String                              | string                                                | \"Call me Ishmael\"                                                                                                                                           |\n| Struct                              | JSON object                                           | {\"name\": \"John Doe\", \"age\": 42}                                                                                                                             |\n| TwoDimensionalAggregation           | JSON object                                           | {\"groups\": [{\"key\": \"alpha\", \"value\": 100}, {\"key\": \"beta\", \"value\": 101}]}                                                                                 |\n| ThreeDimensionalAggregation         | JSON object                                           | {\"groups\": [{\"key\": \"NYC\", \"groups\": [{\"key\": \"Engineer\", \"value\" : 100}]}]}                                                                                |\n| Timestamp                           | ISO 8601 extended offset date-time string in UTC zone | \"2021-01-04T05:00:00Z\"                                                                                                                                      |",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyDataType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "struct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyStructType"
                  }
                }
              }
            },
            "set": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologySetType"
                  }
                }
              }
            },
            "string": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringType"
                  }
                }
              }
            },
            "byte": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ByteType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "integer": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntegerType"
                  }
                }
              }
            },
            "float": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FloatType"
                  }
                }
              }
            },
            "any": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AnyType"
                  }
                }
              }
            },
            "long": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LongType"
                  }
                }
              }
            },
            "boolean": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BooleanType"
                  }
                }
              }
            },
            "cipherText": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CipherTextType"
                  }
                }
              }
            },
            "marking": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MarkingType"
                  }
                }
              }
            },
            "unsupported": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "UnsupportedType"
                  }
                }
              }
            },
            "array": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyArrayType"
                  }
                }
              }
            },
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectSetType"
                  }
                }
              }
            },
            "binary": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BinaryType"
                  }
                }
              }
            },
            "short": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ShortType"
                  }
                }
              }
            },
            "decimal": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DecimalType"
                  }
                }
              }
            },
            "map": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyMapType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            },
            "object": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the primitive types used by Palantir's Ontology-based products.\n",
        "plainTextDescription": "A union of all the primitive types used by Palantir's Ontology-based products.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QualifiedTimeseriesProperty"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "seriesId": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SeriesId"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "syncRid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimeseriesSyncRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The representation of a time series property backed by multiple time series syncs.",
        "plainTextDescription": "The representation of a time series property backed by multiple time series syncs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyMinAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the minimum value for the provided field.",
        "plainTextDescription": "Computes the minimum value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FunctionRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of a Function, useful for interacting with other Foundry APIs.\n",
        "plainTextDescription": "The unique resource identifier of a Function, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BlueprintIcon"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "color": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "A hexadecimal color code.",
                "plainTextDescription": "A hexadecimal color code.",
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The [name](https://blueprintjs.com/docs/#icons/icons-list) of the Blueprint icon. \nUsed to specify the Blueprint icon to represent the object type in a React app.\n",
                "plainTextDescription": "The name of the Blueprint icon.\nUsed to specify the Blueprint icon to represent the object type in a React app.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObjectArrayType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "subType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectPropertyType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "IntersectsBoundingBoxQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BoundingBoxValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field intersects the bounding box provided. Allows you to specify a property \nto query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field intersects the bounding box provided. Allows you to specify a property\nto query on by a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectsResponseItemV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "group": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupKeyV2"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupValueV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "metrics": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricResultV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SubscriptionSuccess"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "id": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionId"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupKeyV2"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AddLink"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "linkTypeApiNameAtoB": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "linkTypeApiNameBtoA": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "aSideObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkSideObject"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "bSideObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkSideObject"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListObjectTypesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of object types in the current page.",
                "plainTextDescription": "The list of object types in the current page.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LoadObjectSetV2ObjectsOrInterfacesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObjectV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of objects in the current page.",
                "plainTextDescription": "The list of objects in the current page.",
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "totalCount": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TotalCount"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the API response when loading an `ObjectSet`. Objects in the returned set can either have properties \ndefined by an interface that the objects belong to or properties defined by the object type of the object.\n",
        "plainTextDescription": "Represents the API response when loading an ObjectSet. Objects in the returned set can either have properties\ndefined by an interface that the objects belong to or properties defined by the object type of the object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeRange"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "absolute": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AbsoluteTimeRange"
                  }
                }
              }
            },
            "relative": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RelativeTimeRange"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "An absolute or relative range for a time series query.",
        "plainTextDescription": "An absolute or relative range for a time series query.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectPropertyValueConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The parameter value must be a property value of an object found within an object set.\n",
        "plainTextDescription": "The parameter value must be a property value of an object found within an object set.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SumAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the sum of values for the provided field.",
        "plainTextDescription": "Computes the sum of values for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceLinkTypeCardinality"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ONE", "MANY"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The cardinality of the link in the given direction. Cardinality can be \"ONE\", meaning an object can\nlink to zero or one other objects, or \"MANY\", meaning an object can link to any number of other objects.\n",
        "plainTextDescription": "The cardinality of the link in the given direction. Cardinality can be \"ONE\", meaning an object can\nlink to zero or one other objects, or \"MANY\", meaning an object can link to any number of other objects.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TwoDimensionalAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "keyType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryAggregationKeyType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "valueType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryAggregationValueType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyArrayType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "itemType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Action"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ExecuteQueryRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OrQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQuery"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where at least 1 query is satisfied.",
        "plainTextDescription": "Returns objects where at least 1 query is satisfied.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyMaxAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the maximum value for the provided field.",
        "plainTextDescription": "Computes the maximum value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetStreamSubscribeRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertySet": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SelectedPropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "referenceSet": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SelectedPropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PrimaryKeyValue"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "any",
          "any": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents the primary key value that is used as a unique identifier for an object.",
        "plainTextDescription": "Represents the primary key value that is used as a unique identifier for an object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "key": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MaxAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the maximum value for the provided field.",
        "plainTextDescription": "Computes the maximum value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CountAggregationV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OrderByDirection"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the total count of objects.",
        "plainTextDescription": "Computes the total count of objects.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetInterfaceBaseType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "interfaceType": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An object set with objects that implement the interface with the given interface API name. The objects in \nthe object set will only have properties that implement properties of the given interface. This is currently \nunsupported and an exception will be thrown if used.\n",
                "plainTextDescription": "An object set with objects that implement the interface with the given interface API name. The objects in\nthe object set will only have properties that implement properties of the given interface. This is currently\nunsupported and an exception will be thrown if used.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QuerySetType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "subType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectState"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ADDED_OR_UPDATED", "REMOVED"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Represents the state of the object within the object set. ADDED_OR_UPDATED indicates that the object was \nadded to the set or the object has updated and was previously in the set. REMOVED indicates that the object \nwas removed from the set due to the object being deleted or the object no longer meets the object set \ndefinition.\n",
        "plainTextDescription": "Represents the state of the object within the object set. ADDED_OR_UPDATED indicates that the object was\nadded to the set or the object has updated and was previously in the set. REMOVED indicates that the object\nwas removed from the set due to the object being deleted or the object no longer meets the object set\ndefinition.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GeotimeSeriesIntegrationRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of a geotime integration.",
        "plainTextDescription": "The unique resource identifier of a geotime integration.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryOutputV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "dataType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "required": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Details about the output of a query.",
        "plainTextDescription": "Details about the output of a query.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetAsBaseObjectTypesType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Casts the objects in the object set to their base type and thus ensures objects are returned with all of their\nproperties in the resulting object set, not just the properties that implement interface properties. This is \ncurrently unsupported and an exception will be thrown if used.\n",
        "plainTextDescription": "Casts the objects in the object set to their base type and thus ensures objects are returned with all of their\nproperties in the resulting object set, not just the properties that implement interface properties. This is\ncurrently unsupported and an exception will be thrown if used.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetSubtractType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSets": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectSet"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GetSelectedPropertyOperation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Gets a single value of a property. Throws if the target object set is on the MANY side of the link and could\nexplode the cardinality.\n\nUse collectList or collectSet which will return a list of values in that case.\n",
        "plainTextDescription": "Gets a single value of a property. Throws if the target object set is on the MANY side of the link and could\nexplode the cardinality.\nUse collectList or collectSet which will return a list of values in that case.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationOrderBy"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "metricName": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationV2"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "approximateDistinct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ApproximateDistinctAggregationV2"
                  }
                }
              }
            },
            "min": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MinAggregationV2"
                  }
                }
              }
            },
            "avg": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AvgAggregationV2"
                  }
                }
              }
            },
            "max": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MaxAggregationV2"
                  }
                }
              }
            },
            "approximatePercentile": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ApproximatePercentileAggregationV2"
                  }
                }
              }
            },
            "count": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CountAggregationV2"
                  }
                }
              }
            },
            "sum": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SumAggregationV2"
                  }
                }
              }
            },
            "exactDistinct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ExactDistinctAggregationV2"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies an aggregation function.",
        "plainTextDescription": "Specifies an aggregation function.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApplyActionRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "options": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ApplyActionRequestOptions"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ContainsAnyTermQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": ["foo bar"]
              }
            },
            "fuzzy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "FuzzyV2"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains any of the whitespace separated words in any \norder in the provided value. This query supports fuzzy matching. Allows you to specify a property to query on\nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field contains any of the whitespace separated words in any\norder in the provided value. This query supports fuzzy matching. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "GeotimeSeriesProperty"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "geotimeSeriesId": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GeotimeSeriesId"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "geotimeSeriesIntegrationRid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GeotimeSeriesIntegrationRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The representation of a geotime series integration as a data type.",
        "plainTextDescription": "The representation of a geotime series integration as a data type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyIdentifier"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Either an ontology rid or an ontology api name.",
        "plainTextDescription": "Either an ontology rid or an ontology api name.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationAccuracyRequest"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["REQUIRE_ACCURATE", "ALLOW_APPROXIMATE"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LtQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is less than a value.",
        "plainTextDescription": "Returns objects where the specified field is less than a value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupValue"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "any",
          "any": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkedObjectV2"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchObjectsForInterfaceRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "where": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQueryV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "orderBy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrderByV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "augmentedProperties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "list",
                    "list": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "PropertyApiName"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from object type API name to a list of property type API names. For each returned object, if the \nobject’s object type is a key in the map, then we augment the response for that object type with the list \nof properties specified in the value.\n",
                "plainTextDescription": "A map from object type API name to a list of property type API names. For each returned object, if the\nobject’s object type is a key in the map, then we augment the response for that object type with the list\nof properties specified in the value.",
                "example": []
              }
            },
            "augmentedSharedPropertyTypes": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "list",
                    "list": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "SharedPropertyTypeApiName"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from interface type API name to a list of shared property type API names. For each returned object, if\nthe object implements an interface that is a key in the map, then we augment the response for that object \ntype with the list of properties specified in the value.\n",
                "plainTextDescription": "A map from interface type API name to a list of shared property type API names. For each returned object, if\nthe object implements an interface that is a key in the map, then we augment the response for that object\ntype with the list of properties specified in the value.",
                "example": []
              }
            },
            "selectedSharedPropertyTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of shared property type API names of the interface type that should be included in the response. \nOmit this parameter to include all properties of the interface type in the response.\n",
                "plainTextDescription": "A list of shared property type API names of the interface type that should be included in the response.\nOmit this parameter to include all properties of the interface type in the response.",
                "example": []
              }
            },
            "selectedObjectTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of object type API names that should be included in the response. If non-empty, object types that are\nnot mentioned will not be included in the response even if they implement the specified interface. Omit the \nparameter to include all object types.\n",
                "plainTextDescription": "A list of object type API names that should be included in the response. If non-empty, object types that are\nnot mentioned will not be included in the response even if they implement the specified interface. Omit the\nparameter to include all object types.",
                "example": []
              }
            },
            "otherInterfaceTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of interface type API names. Object types must implement all the mentioned interfaces in order to be \nincluded in the response.\n",
                "plainTextDescription": "A list of interface type API names. Object types must implement all the mentioned interfaces in order to be\nincluded in the response.",
                "example": []
              }
            },
            "pageSize": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageSize"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "pageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyApproximatePercentileAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "approximatePercentile": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "double",
                  "double": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the approximate percentile value for the provided field.",
        "plainTextDescription": "Computes the approximate percentile value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StreamTimeSeriesValuesRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "range": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "TimeRange"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LogicRule"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "deleteInterfaceObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DeleteInterfaceObjectRule"
                  }
                }
              }
            },
            "modifyInterfaceObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ModifyInterfaceObjectRule"
                  }
                }
              }
            },
            "modifyObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ModifyObjectRule"
                  }
                }
              }
            },
            "deleteObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DeleteObjectRule"
                  }
                }
              }
            },
            "createInterfaceObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CreateInterfaceObjectRule"
                  }
                }
              }
            },
            "deleteLink": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DeleteLinkRule"
                  }
                }
              }
            },
            "createObject": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CreateObjectRule"
                  }
                }
              }
            },
            "createLink": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CreateLinkRule"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StringRegexMatchConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "regex": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The regular expression configured in the **Ontology Manager**.",
                "plainTextDescription": "The regular expression configured in the Ontology Manager.",
                "example": []
              }
            },
            "configuredFailureMessage": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The message indicating that the regular expression was not matched.\nThis is configured per parameter in the **Ontology Manager**.\n",
                "plainTextDescription": "The message indicating that the regular expression was not matched.\nThis is configured per parameter in the Ontology Manager.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The parameter value must match a predefined regular expression.\n",
        "plainTextDescription": "The parameter value must match a predefined regular expression.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionResults"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "edits": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectEdits"
                  }
                }
              }
            },
            "largeScaleEdits": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeEdits"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupKey"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ValidationResult"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["VALID", "INVALID"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Represents the state of a validation.\n",
        "plainTextDescription": "Represents the state of a validation.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeFullMetadata"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeV2"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "linkTypes": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "LinkTypeSideV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "implementsInterfaces": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of interfaces that this object type implements.",
                "plainTextDescription": "A list of interfaces that this object type implements.",
                "example": []
              }
            },
            "implementsInterfaces2": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "InterfaceTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectTypeInterfaceImplementation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A list of interfaces that this object type implements and how it implements them.",
                "plainTextDescription": "A list of interfaces that this object type implements and how it implements them.",
                "example": []
              }
            },
            "sharedPropertyTypeMapping": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "A map from shared property type API name to backing local property API name for the shared property types \npresent on this object type.\n",
                "plainTextDescription": "A map from shared property type API name to backing local property API name for the shared property types\npresent on this object type.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AvgAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "name": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the average value for the provided field.",
        "plainTextDescription": "Computes the average value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchOrderingV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "direction": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "Specifies the ordering direction (can be either `asc` or `desc`)",
                "plainTextDescription": "Specifies the ordering direction (can be either asc or desc)",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregateObjectsResponseItem"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "group": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupKey"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationGroupValue"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "metrics": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "AggregationMetricResult"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ValidateActionResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "result": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValidationResult"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "submissionCriteria": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SubmissionCriteriaEvaluation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterEvaluationResult"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ArtifactRepositoryRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StructFieldType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StructFieldApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "dataType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectPropertyType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeInterfaceImplementation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "properties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SharedPropertyTypeApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncActionOperation"
      },
      "type": {
        "type": "asyncOperation",
        "asyncOperation": {
          "operationType": "applyActionAsync",
          "resultType": {
            "locator": {
              "namespaceName": "Core",
              "localName": "AsyncApplyActionResponse"
            }
          },
          "stageType": {
            "locator": {
              "namespaceName": "Core",
              "localName": "AsyncActionStatus"
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "RequestId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "uuid",
          "uuid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Unique request id",
        "plainTextDescription": "Unique request id",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StartsWithQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": ["foo"]
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field starts with the provided value. Allows you to specify a property to \nquery on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field starts with the provided value. Allows you to specify a property to\nquery on by a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncApplyActionResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "operationId": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "rid",
                  "rid": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetSearchAroundType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "link": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationExactGroupingV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "maxGroupCount": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "integer",
                      "integer": {}
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "defaultValue": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups according to an exact value.",
        "plainTextDescription": "Divides objects into groups according to an exact value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ContainsQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified array contains a value.",
        "plainTextDescription": "Returns objects where the specified array contains a value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetMethodInputType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "ObjectSet which is the root of a MethodObjectSet definition.\n\nThis feature is experimental and not yet generally available.\n",
        "plainTextDescription": "ObjectSet which is the root of a MethodObjectSet definition.\nThis feature is experimental and not yet generally available.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LteQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is less than or equal to a value.",
        "plainTextDescription": "Returns objects where the specified field is less than or equal to a value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AndQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchJsonQuery"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where every query is satisfied.",
        "plainTextDescription": "Returns objects where every query is satisfied.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CreateObjectRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListLinkedObjectsResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyObjectV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyObjectTypeReferenceType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QosError"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "An error indicating that the subscribe request should be attempted on a different node.\n",
        "plainTextDescription": "An error indicating that the subscribe request should be attempted on a different node.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SeriesId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The unique codex id of a time series.",
        "plainTextDescription": "The unique codex id of a time series.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyTypeStatus"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "deprecated": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DeprecatedPropertyTypeStatus"
                  }
                }
              }
            },
            "active": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActivePropertyTypeStatus"
                  }
                }
              }
            },
            "experimental": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ExperimentalPropertyTypeStatus"
                  }
                }
              }
            },
            "example": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ExamplePropertyTypeStatus"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The status to indicate whether the PropertyType is either Experimental, Active, Deprecated, or Example.\n",
        "plainTextDescription": "The status to indicate whether the PropertyType is either Experimental, Active, Deprecated, or Example.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetUpdate"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "reference": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReferenceUpdate"
                  }
                }
              }
            },
            "object": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectUpdate"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "filename": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "Filename"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "sizeBytes": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SizeBytes"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "mediaType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MediaType"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The representation of an attachment.",
        "plainTextDescription": "The representation of an attachment.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ReferenceUpdate"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "primaryKey": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectPrimaryKey"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "property": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReferenceValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The updated data value associated with an object instance's external reference. The object instance\nis uniquely identified by an object type and a primary key. Note that the value of the property\nfield returns a dereferenced value rather than the reference itself.\n",
        "plainTextDescription": "The updated data value associated with an object instance's external reference. The object instance\nis uniquely identified by an object type and a primary key. Note that the value of the property\nfield returns a dereferenced value rather than the reference itself.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Aggregation"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "approximateDistinct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ApproximateDistinctAggregation"
                  }
                }
              }
            },
            "min": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MinAggregation"
                  }
                }
              }
            },
            "avg": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AvgAggregation"
                  }
                }
              }
            },
            "max": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MaxAggregation"
                  }
                }
              }
            },
            "count": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "CountAggregation"
                  }
                }
              }
            },
            "sum": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SumAggregation"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies an aggregation function.",
        "plainTextDescription": "Specifies an aggregation function.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyDefinition"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MethodObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "operation": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SelectedPropertyOperation"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Definition for a selected property over a MethodObjectSet.",
        "plainTextDescription": "Definition for a selected property over a MethodObjectSet.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SubscriptionId"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "uuid",
          "uuid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "A unique identifier used to associate subscription requests with responses.",
        "plainTextDescription": "A unique identifier used to associate subscription requests with responses.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeSeriesPoint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "time": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "datetime",
                  "datetime": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An ISO 8601 timestamp",
                "plainTextDescription": "An ISO 8601 timestamp",
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "An object which is either an enum String or a double number.",
                "plainTextDescription": "An object which is either an enum String or a double number.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A time and value pair.\n",
        "plainTextDescription": "A time and value pair.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "WithinPolygonQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PolygonValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains a point within the polygon provided. Allows you to specify a \nproperty to query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not \nboth.\n",
        "plainTextDescription": "Returns objects where the specified field contains a point within the polygon provided. Allows you to specify a\nproperty to query on by a variety of means. Either field or propertyIdentifier must be supplied, but not\nboth.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DoesNotIntersectPolygonQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PolygonValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field does not intersect the polygon provided. Allows you to specify a \nproperty to query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not \nboth.\n",
        "plainTextDescription": "Returns objects where the specified field does not intersect the polygon provided. Allows you to specify a\nproperty to query on by a variety of means. Either field or propertyIdentifier must be supplied, but not\nboth.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncApplyActionResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OrderBy"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A command representing the list of properties to order by. Properties should be delimited by commas and\nprefixed by `p` or `properties`. The format expected format is\n`orderBy=properties.{property}:{sortDirection},properties.{property}:{sortDirection}...`\n\nBy default, the ordering for a property is ascending, and this can be explicitly specified by appending \n`:asc` (for ascending) or `:desc` (for descending).\n\nExample: use `orderBy=properties.lastName:asc` to order by a single property, \n`orderBy=properties.lastName,properties.firstName,properties.age:desc` to order by multiple properties. \nYou may also use the shorthand `p` instead of `properties` such as `orderBy=p.lastName:asc`.\n",
        "plainTextDescription": "A command representing the list of properties to order by. Properties should be delimited by commas and\nprefixed by p or properties. The format expected format is\norderBy=properties.{property}:{sortDirection},properties.{property}:{sortDirection}...\nBy default, the ordering for a property is ascending, and this can be explicitly specified by appending\n:asc (for ascending) or :desc (for descending).\nExample: use orderBy=properties.lastName:asc to order by a single property,\norderBy=properties.lastName,properties.firstName,properties.age:desc to order by multiple properties.\nYou may also use the shorthand p instead of properties such as orderBy=p.lastName:asc.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetWithPropertiesType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "derivedProperties": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DerivedPropertyApiName"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DerivedPropertyDefinition"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Map of the name of the derived property to return and its definition\n",
                "plainTextDescription": "Map of the name of the derived property to return and its definition",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "ObjectSet which returns objects with additional derived properties.\n\nThis feature is experimental and not yet generally available.\n",
        "plainTextDescription": "ObjectSet which returns objects with additional derived properties.\nThis feature is experimental and not yet generally available.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "IntersectsPolygonQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PolygonValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field intersects the polygon provided. Allows you to specify a property to \nquery on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field intersects the polygon provided. Allows you to specify a property to\nquery on by a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "NotQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SearchJsonQueryV2"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the query is not satisfied.",
        "plainTextDescription": "Returns objects where the query is not satisfied.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetBaseType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectType": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The API name of the object type.",
                "plainTextDescription": "The API name of the object type.",
                "example": ["exampleAircraft"]
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListOntologiesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Ontology"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of Core the user has access to.",
                "plainTextDescription": "The list of Core the user has access to.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BatchApplyActionRequestV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "options": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "BatchApplyActionRequestOptions"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "requests": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "BatchApplyActionRequestItem"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "NearestNeighborsQueryText"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Automatically embed the text in a vector using the embedding model configured for the given propertyIdentifier.\n",
        "plainTextDescription": "Automatically embed the text in a vector using the embedding model configured for the given propertyIdentifier.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListActionTypesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ActionType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryParameterV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "dataType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryDataType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Details about a parameter of a query.",
        "plainTextDescription": "Details about a parameter of a query.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationRangeV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "startValue": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Inclusive start.",
                "plainTextDescription": "Inclusive start.",
                "example": []
              }
            },
            "endValue": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Exclusive end.",
                "plainTextDescription": "Exclusive end.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies a range from an inclusive start value to an exclusive end value.",
        "plainTextDescription": "Specifies a range from an inclusive start value to an exclusive end value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "WithinBoundingBoxPoint"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "Point": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Geo",
                    "localName": "GeoPoint"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyAvgAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Computes the average value for the provided field.",
        "plainTextDescription": "Computes the average value for the provided field.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeseriesTemplateRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The RID identifying a time series codex template that resolves to a derived series.",
        "plainTextDescription": "The RID identifying a time series codex template that resolves to a derived series.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchOrderBy"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "fields": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "SearchOrdering"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Specifies the ordering of search results by a field and an ordering direction.",
        "plainTextDescription": "Specifies the ordering of search results by a field and an ordering direction.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ErrorName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyStructType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "fields": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyStructField"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ReturnEditsMode"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ALL", "NONE"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReleaseStatus"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Parameter"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "operations": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "LogicRule"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents an action type in the Ontology.",
        "plainTextDescription": "Represents an action type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ReferenceValue"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "geotimeSeriesValue": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GeotimeSeriesValue"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Resolved data values pointed to by a reference.",
        "plainTextDescription": "Resolved data values pointed to by a reference.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an object, useful for interacting with other Foundry APIs.\n",
        "plainTextDescription": "The unique resource identifier of an object, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StructFieldSelector"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "propertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "structFieldApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StructFieldApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A combination of a struct property api name and a struct field api name. This is used to select struct fields \nto query on. Note that you can still select struct properties with only a 'PropertyApiNameSelector'; the queries \nwill then become 'OR' queries across the fields of the struct property.\n",
        "plainTextDescription": "A combination of a struct property api name and a struct field api name. This is used to select struct fields\nto query on. Note that you can still select struct properties with only a 'PropertyApiNameSelector'; the queries\nwill then become 'OR' queries across the fields of the struct property.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "NestedQueryAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "key": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "groups": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryAggregation"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FuzzyV2"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "boolean",
          "boolean": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "Setting fuzzy to `true` allows approximate matching in search queries that support it.",
        "plainTextDescription": "Setting fuzzy to true allows approximate matching in search queries that support it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ArraySizeConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "lt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Less than",
                "plainTextDescription": "Less than",
                "example": []
              }
            },
            "lte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Less than or equal",
                "plainTextDescription": "Less than or equal",
                "example": []
              }
            },
            "gt": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Greater than",
                "plainTextDescription": "Greater than",
                "example": []
              }
            },
            "gte": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "any",
                      "any": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "Greater than or equal",
                "plainTextDescription": "Greater than or equal",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The parameter expects an array of values and the size of the array must fall within the defined range.\n",
        "plainTextDescription": "The parameter expects an array of values and the size of the array must fall within the defined range.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CountObjectsResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "count": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "integer",
                      "integer": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationMetricResult"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "name": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "double",
                      "double": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "TBD",
                "plainTextDescription": "TBD",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "EqualsQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field is equal to a value.",
        "plainTextDescription": "Returns objects where the specified field is equal to a value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ContainsAllTermsInOrderQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": ["foo bar"]
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains all of the terms in the order provided,\nbut they do have to be adjacent to each other. Allows you to specify a property to query on\nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field contains all of the terms in the order provided,\nbut they do have to be adjacent to each other. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "StreamTimeSeriesValuesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "TimeseriesEntry"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncApplyActionOperationResponseV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ContainsAllTermsQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": ["foo bar"]
              }
            },
            "fuzzy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "FuzzyV2"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains all of the whitespace separated words in any\norder in the provided value. This query supports fuzzy matching. Allows you to specify a property to query on \nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects where the specified field contains all of the whitespace separated words in any\norder in the provided value. This query supports fuzzy matching. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ExamplePropertyTypeStatus"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "This status indicates that the PropertyType is an example. It is backed by notional data that should not be\nused for actual workflows, but can be used to test those workflows.\n",
        "plainTextDescription": "This status indicates that the PropertyType is an example. It is backed by notional data that should not be\nused for actual workflows, but can be used to test those workflows.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryDataType"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "date": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DateType"
                  }
                }
              }
            },
            "struct": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryStructType"
                  }
                }
              }
            },
            "set": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QuerySetType"
                  }
                }
              }
            },
            "string": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringType"
                  }
                }
              }
            },
            "double": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DoubleType"
                  }
                }
              }
            },
            "integer": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "IntegerType"
                  }
                }
              }
            },
            "threeDimensionalAggregation": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ThreeDimensionalAggregation"
                  }
                }
              }
            },
            "union": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryUnionType"
                  }
                }
              }
            },
            "float": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FloatType"
                  }
                }
              }
            },
            "long": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LongType"
                  }
                }
              }
            },
            "boolean": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BooleanType"
                  }
                }
              }
            },
            "unsupported": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "UnsupportedType"
                  }
                }
              }
            },
            "attachment": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentType"
                  }
                }
              }
            },
            "null": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "NullType"
                  }
                }
              }
            },
            "array": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryArrayType"
                  }
                }
              }
            },
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectSetType"
                  }
                }
              }
            },
            "twoDimensionalAggregation": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TwoDimensionalAggregation"
                  }
                }
              }
            },
            "object": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyObjectType"
                  }
                }
              }
            },
            "timestamp": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "TimestampType"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A union of all the types supported by Ontology Query parameters or outputs.\n",
        "plainTextDescription": "A union of all the types supported by Ontology Query parameters or outputs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationFixedWidthGroupingV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fixedWidth": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Divides objects into groups with the specified width.",
        "plainTextDescription": "Divides objects into groups with the specified width.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetFilterType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "where": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SearchJsonQueryV2"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListOutgoingLinkTypesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "LinkTypeSide"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of link type sides in the current page.",
                "plainTextDescription": "The list of link type sides in the current page.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "BatchApplyActionRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "requests": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ApplyActionRequest"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ExperimentalPropertyTypeStatus"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "This status indicates that the PropertyType is in development.",
        "plainTextDescription": "This status indicates that the PropertyType is in development.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "IsNullQueryV2"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": [false]
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects based on the existence of the specified field. Allows you to specify a property to query on\nby a variety of means. Either `field` or `propertyIdentifier` must be supplied, but not both.\n",
        "plainTextDescription": "Returns objects based on the existence of the specified field. Allows you to specify a property to query on\nby a variety of means. Either field or propertyIdentifier must be supplied, but not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AsyncActionStatus"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": [
            "RUNNING_SUBMISSION_CHECKS",
            "EXECUTING_WRITE_BACK_WEBHOOK",
            "COMPUTING_ONTOLOGY_EDITS",
            "COMPUTING_FUNCTION",
            "WRITING_ONTOLOGY_EDITS",
            "EXECUTING_SIDE_EFFECT_WEBHOOK",
            "SENDING_NOTIFICATIONS"
          ]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SelectedPropertyCollectListAggregation"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "selectedPropertyApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "limit": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "Maximum number of values to collect. The maximum supported limit is 100.\n",
                "plainTextDescription": "Maximum number of values to collect. The maximum supported limit is 100.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Lists all values of a property up to the specified limit. The maximum supported limit is 100, by default.\n\nNOTE: A separate count aggregation should be used to determine the total count of values, to account for\na possible truncation of the returned list.\n\nIgnores objects for which a property is absent, so the returned list will contain non-null values only.\nReturns an empty list when none of the objects have values for a provided property.\n",
        "plainTextDescription": "Lists all values of a property up to the specified limit. The maximum supported limit is 100, by default.\nNOTE: A separate count aggregation should be used to determine the total count of values, to account for\na possible truncation of the returned list.\nIgnores objects for which a property is absent, so the returned list will contain non-null values only.\nReturns an empty list when none of the objects have values for a provided property.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an action type, useful for interacting with other Foundry APIs.\n",
        "plainTextDescription": "The unique resource identifier of an action type, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "DisplayName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Parameter"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "output": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyDataType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FunctionRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "version": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FunctionVersion"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Represents a query type in the Ontology.",
        "plainTextDescription": "Represents a query type in the Ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "WithinBoundingBoxQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyIdentifier"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "BoundingBoxValue"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains a point within the bounding box provided. Allows you to \nspecify a property to query on by a variety of means. Either `field` or `propertyIdentifier` must be supplied, \nbut not both.\n",
        "plainTextDescription": "Returns objects where the specified field contains a point within the bounding box provided. Allows you to\nspecify a property to query on by a variety of means. Either field or propertyIdentifier must be supplied,\nbut not both.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetSubscribeResponses"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "responses": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ObjectSetSubscribeResponse"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "id": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RequestId"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns a response for every request in the same order. Duplicate requests will be assigned the same SubscriberId.\n",
        "plainTextDescription": "Returns a response for every request in the same order. Duplicate requests will be assigned the same SubscriberId.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AnyTermQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "fuzzy": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "Fuzzy"
                      }
                    }
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field contains any of the whitespace separated words in any \norder in the provided value. This query supports fuzzy matching.\n",
        "plainTextDescription": "Returns objects where the specified field contains any of the whitespace separated words in any\norder in the provided value. This query supports fuzzy matching.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkedObjectTypeApiName"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A reference to the linked object type.",
        "plainTextDescription": "A reference to the linked object type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetNearestNeighborsType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectSet": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectSet"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "propertyIdentifier": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyIdentifier"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "numNeighbors": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "The number of objects to return. If the number of documents in the objectType is less than the provided\nvalue, all objects will be returned. This value is limited to 1 &lt;= numNeighbors &lt;= 500.\n",
                "plainTextDescription": "The number of objects to return. If the number of documents in the objectType is less than the provided\nvalue, all objects will be returned. This value is limited to 1 <= numNeighbors <= 500.",
                "example": []
              }
            },
            "query": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "NearestNeighborsQuery"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "ObjectSet containing the top `numNeighbors` objects with `propertyIdentifier` nearest to the input vector or\ntext. This can only be performed on a property with type vector that has been configured to be searched with\napproximate nearest neighbors using a similarity function configured in the Ontology.\n\nA non-zero score for each resulting object is returned when the `orderType` in the `orderBy` field is set to\n`relevance`. Note that:\n  - Scores will not be returned if a nearestNeighbors object set is composed through union, subtraction \n    or intersection with non-nearestNeighbors object sets.\n  - If results have scores, the order of the scores will be decreasing (duplicate scores are possible).\n",
        "plainTextDescription": "ObjectSet containing the top numNeighbors objects with propertyIdentifier nearest to the input vector or\ntext. This can only be performed on a property with type vector that has been configured to be searched with\napproximate nearest neighbors using a similarity function configured in the Ontology.\nA non-zero score for each resulting object is returned when the orderType in the orderBy field is set to\nrelevance. Note that:\n\nScores will not be returned if a nearestNeighbors object set is composed through union, subtraction\nor intersection with non-nearestNeighbors object sets.\nIf results have scores, the order of the scores will be decreasing (duplicate scores are possible).",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SubscriptionClosed"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "id": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionId"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "cause": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SubscriptionClosureCause"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The subscription has been closed due to an irrecoverable error during its lifecycle.\n",
        "plainTextDescription": "The subscription has been closed due to an irrecoverable error during its lifecycle.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceLinkType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "rid": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceLinkTypeRid"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceLinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "description": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "builtin",
                    "builtin": {
                      "type": "string",
                      "string": {}
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The description of the interface link type.",
                "plainTextDescription": "The description of the interface link type.",
                "example": []
              }
            },
            "linkedEntityApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceLinkTypeLinkedEntityApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "cardinality": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceLinkTypeCardinality"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "required": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "boolean",
                  "boolean": {}
                }
              },
              "safety": "SAFE",
              "documentation": {
                "description": "Whether each implementing object type must declare at least one implementation of this link.\n",
                "plainTextDescription": "Whether each implementing object type must declare at least one implementation of this link.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A link type constraint defined at the interface level where the implementation of the links is provided\nby the implementing object types.\n",
        "plainTextDescription": "A link type constraint defined at the interface level where the implementation of the links is provided\nby the implementing object types.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "Reason"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "reason": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReasonType"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationAccuracy"
      },
      "type": {
        "type": "enum",
        "enum": {
          "values": ["ACCURATE", "APPROXIMATE"]
        }
      },
      "safety": "SAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentPropertyV2"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListQueryTypesResponse"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "nextPageToken": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PageToken"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "QueryType"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an interface, useful for interacting with other Foundry APIs.",
        "plainTextDescription": "The unique resource identifier of an interface, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkTypeSide"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "apiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "displayName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DisplayName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "status": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ReleaseStatus"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "cardinality": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "LinkTypeSideCardinality"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "foreignKeyPropertyApiName": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "UnevaluableConstraint"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The parameter cannot be evaluated because it depends on another parameter or object set that can't be evaluated.\nThis can happen when a parameter's allowed values are defined by another parameter that is missing or invalid.\n",
        "plainTextDescription": "The parameter cannot be evaluated because it depends on another parameter or object set that can't be evaluated.\nThis can happen when a parameter's allowed values are defined by another parameter that is missing or invalid.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryRuntimeErrorParameter"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterEvaluatedConstraint"
      },
      "type": {
        "type": "union",
        "union": {
          "discriminator": "type",
          "subTypes": {
            "oneOf": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OneOfConstraint"
                  }
                }
              }
            },
            "groupMember": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "GroupMemberConstraint"
                  }
                }
              }
            },
            "objectPropertyValue": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectPropertyValueConstraint"
                  }
                }
              }
            },
            "range": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "RangeConstraint"
                  }
                }
              }
            },
            "arraySize": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ArraySizeConstraint"
                  }
                }
              }
            },
            "objectQueryResult": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectQueryResultConstraint"
                  }
                }
              }
            },
            "stringLength": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringLengthConstraint"
                  }
                }
              }
            },
            "stringRegexMatch": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "StringRegexMatchConstraint"
                  }
                }
              }
            },
            "unevaluable": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "UnevaluableConstraint"
                  }
                }
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "A constraint that an action parameter value must satisfy in order to be considered valid.\nConstraints can be configured on action parameters in the **Ontology Manager**. \nApplicable constraints are determined dynamically based on parameter inputs. \nParameter values are evaluated against the final set of constraints.\n\nThe type of the constraint.\n| Type                  | Description                                                                                                                                                                                                                     |\n|-----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `arraySize`           | The parameter expects an array of values and the size of the array must fall within the defined range.                                                                                                                          |\n| `groupMember`         | The parameter value must be the user id of a member belonging to at least one of the groups defined by the constraint.                                                                                                          |\n| `objectPropertyValue` | The parameter value must be a property value of an object found within an object set.                                                                                                                                           |\n| `objectQueryResult`   | The parameter value must be the primary key of an object found within an object set.                                                                                                                                            |\n| `oneOf`               | The parameter has a manually predefined set of options.                                                                                                                                                                         |\n| `range`               | The parameter value must be within the defined range.                                                                                                                                                                           |\n| `stringLength`        | The parameter value must have a length within the defined range.                                                                                                                                                                |\n| `stringRegexMatch`    | The parameter value must match a predefined regular expression.                                                                                                                                                                 |\n| `unevaluable`         | The parameter cannot be evaluated because it depends on another parameter or object set that can't be evaluated. This can happen when a parameter's allowed values are defined by another parameter that is missing or invalid. |\n",
        "plainTextDescription": "A constraint that an action parameter value must satisfy in order to be considered valid.\nConstraints can be configured on action parameters in the Ontology Manager.\nApplicable constraints are determined dynamically based on parameter inputs.\nParameter values are evaluated against the final set of constraints.\nThe type of the constraint.\n| Type                  | Description                                                                                                                                                                                                                     |\n|-----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| arraySize           | The parameter expects an array of values and the size of the array must fall within the defined range.                                                                                                                          |\n| groupMember         | The parameter value must be the user id of a member belonging to at least one of the groups defined by the constraint.                                                                                                          |\n| objectPropertyValue | The parameter value must be a property value of an object found within an object set.                                                                                                                                           |\n| objectQueryResult   | The parameter value must be the primary key of an object found within an object set.                                                                                                                                            |\n| oneOf               | The parameter has a manually predefined set of options.                                                                                                                                                                         |\n| range               | The parameter value must be within the defined range.                                                                                                                                                                           |\n| stringLength        | The parameter value must have a length within the defined range.                                                                                                                                                                |\n| stringRegexMatch    | The parameter value must match a predefined regular expression.                                                                                                                                                                 |\n| unevaluable         | The parameter cannot be evaluated because it depends on another parameter or object set that can't be evaluated. This can happen when a parameter's allowed values are defined by another parameter that is missing or invalid. |",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TimeSeriesValueBankProperty"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceTypeApiName"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "string",
          "string": {}
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "The name of the interface type in the API in UpperCamelCase format. To find the API name for your interface\ntype, use the `List interface types` endpoint or check the **Ontology Manager**.\n",
        "plainTextDescription": "The name of the interface type in the API in UpperCamelCase format. To find the API name for your interface\ntype, use the List interface types endpoint or check the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ListOntologiesV2Response"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "data": {
              "type": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "OntologyV2"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "description": "The list of Core the user has access to.",
                "plainTextDescription": "The list of Core the user has access to.",
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActivePropertyTypeStatus"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "This status indicates that the PropertyType will not change on short notice and should thus be safe to use in\nuser facing workflows.\n",
        "plainTextDescription": "This status indicates that the PropertyType will not change on short notice and should thus be safe to use in\nuser facing workflows.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionParameterArrayType"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "subType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionParameterType"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SharedPropertyTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an shared property type, useful for interacting with other Foundry APIs.\n",
        "plainTextDescription": "The unique resource identifier of an shared property type, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeRid"
      },
      "type": {
        "type": "builtin",
        "builtin": {
          "type": "rid",
          "rid": {}
        }
      },
      "safety": "SAFE",
      "documentation": {
        "description": "The unique resource identifier of an object type, useful for interacting with other Foundry APIs.",
        "plainTextDescription": "The unique resource identifier of an object type, useful for interacting with other Foundry APIs.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PrefixQuery"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "field": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "FieldNameV1"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "value": {
              "type": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "description": "Returns objects where the specified field starts with the provided value.",
        "plainTextDescription": "Returns objects where the specified field starts with the provided value.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApplyActionRequest"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "parameters": {
              "type": {
                "type": "map",
                "map": {
                  "keyType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "ParameterId"
                      }
                    }
                  },
                  "valueType": {
                    "type": "optional",
                    "optional": {
                      "subType": {
                        "type": "reference",
                        "reference": {
                          "locator": {
                            "namespaceName": "Core",
                            "localName": "DataValue"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MediaMetadata"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "path": {
              "type": {
                "type": "optional",
                "optional": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "MediaItemPath"
                      }
                    }
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            },
            "sizeBytes": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SizeBytes"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            },
            "mediaType": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "MediaType"
                  }
                }
              },
              "safety": "SAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ModifyObjectRule"
      },
      "type": {
        "type": "object",
        "object": {
          "properties": {
            "objectTypeApiName": {
              "type": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              },
              "safety": "UNSAFE",
              "documentation": {
                "example": []
              }
            }
          }
        }
      },
      "safety": "UNSAFE",
      "documentation": {
        "example": []
      }
    }],
    "errors": [{
      "locator": {
        "namespaceName": "Core",
        "localName": "MalformedPropertyFilters"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "malformedPropertyFilter": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "At least one of requested filters are malformed. Please look at the documentation of `PropertyFilter`.\n",
        "plainTextDescription": "At least one of requested filters are malformed. Please look at the documentation of PropertyFilter.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidAggregationRangeValue"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Aggregation value does not conform to the expected underlying type.\n",
        "plainTextDescription": "Aggregation value does not conform to the expected underlying type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionParameterInterfaceTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "parameterId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ParameterId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The parameter references an interface type that could not be found, or the client token does not have access to it.\n",
        "plainTextDescription": "The parameter references an interface type that could not be found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MarketplaceObjectMappingNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "artifactRepository": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ArtifactRepositoryRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "packageName": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "SdkPackageName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given object could not be mapped to a Marketplace installation.",
        "plainTextDescription": "The given object could not be mapped to a Marketplace installation.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidDurationGroupByValue"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "Duration groupBy value is invalid. Units larger than day must have value `1` and date properties do not support\nfiltering on units smaller than day. As examples, neither bucketing by every two weeks nor bucketing a date by\nevery two hours are allowed.\n",
        "plainTextDescription": "Duration groupBy value is invalid. Units larger than day must have value 1 and date properties do not support\nfiltering on units smaller than day. As examples, neither bucketing by every two weeks nor bucketing a date by\nevery two hours are allowed.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertiesNotFilterable"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "properties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Results could not be filtered by the requested properties. Please mark the properties as *Searchable* and\n*Selectable* in the **Ontology Manager** to be able to filter on those properties. There may be a short delay\nbetween the time a property is marked *Searchable* and *Selectable* and when it can be used.\n",
        "plainTextDescription": "Results could not be filtered by the requested properties. Please mark the properties as Searchable and\nSelectable in the Ontology Manager to be able to filter on those properties. There may be a short delay\nbetween the time a property is marked Searchable and Selectable and when it can be used.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParametersNotFound"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "actionType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ActionTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "unknownParameterIds": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ParameterId"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "configuredParameterIds": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ParameterId"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The provided parameter ID was not found for the action. Please look at the `configuredParameterIds` field\nto see which ones are available.\n",
        "plainTextDescription": "The provided parameter ID was not found for the action. Please look at the configuredParameterIds field\nto see which ones are available.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationNestedObjectSetSizeExceededLimit"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "objectsCount": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "integer",
              "integer": {}
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "objectsLimit": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "integer",
              "integer": {}
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "A nested object set within the aggregation exceeded the allowed limit.\nThis can be fixed by aggregating over fewer objects, such as by applying a filter.\n",
        "plainTextDescription": "A nested object set within the aggregation exceeded the allowed limit.\nThis can be fixed by aggregating over fewer objects, such as by applying a filter.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ApplyActionFailed"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyTypesSearchNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "parameters": {
          "type": {
            "type": "map",
            "map": {
              "keyType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyFilter"
                  }
                }
              },
              "valueType": {
                "type": "list",
                "list": {
                  "subType": {
                    "type": "reference",
                    "reference": {
                      "locator": {
                        "namespaceName": "Core",
                        "localName": "PropertyApiName"
                      }
                    }
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The search on the property types are not supported. See the `Search Objects` documentation for\na list of supported search queries on different property types.\n",
        "plainTextDescription": "The search on the property types are not supported. See the Search Objects documentation for\na list of supported search queries on different property types.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidParameterValue"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "parameterBaseType": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ValueType"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "parameterDataType": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyDataType"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "parameterId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ParameterId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "parameterValue": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DataValue"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The value of the given parameter is invalid. See the documentation of `DataValue` for details on\nhow parameters are represented.\n",
        "plainTextDescription": "The value of the given parameter is invalid. See the documentation of DataValue for details on\nhow parameters are represented.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "UnsupportedObjectSet"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "The requested object set is not supported.",
        "plainTextDescription": "The requested object set is not supported.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SharedPropertyTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "apiName": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SharedPropertyTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "rid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SharedPropertyTypeRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested shared property type is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested shared property type is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryTimeExceededLimit"
      },
      "errorType": "TIMEOUT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Time limits were exceeded for the `Query` execution.\n",
        "plainTextDescription": "Time limits were exceeded for the Query execution.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "CompositePrimaryKeyNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "primaryKey": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Primary keys consisting of multiple properties are not supported by this API. If you need support for this,\nplease reach out to Palantir Support.\n",
        "plainTextDescription": "Primary keys consisting of multiple properties are not supported by this API. If you need support for this,\nplease reach out to Palantir Support.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyBaseTypeNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The type of the requested property is not currently supported by this API. If you need support for this,\nplease reach out to Palantir Support.\n",
        "plainTextDescription": "The type of the requested property is not currently supported by this API. If you need support for this,\nplease reach out to Palantir Support.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryRuntimeError"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "message": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "stacktrace": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "parameters": {
          "type": {
            "type": "map",
            "map": {
              "keyType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "QueryRuntimeErrorParameter"
                  }
                }
              },
              "valueType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The authored `Query` failed to execute because of a runtime error.\n",
        "plainTextDescription": "The authored Query failed to execute because of a runtime error.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertiesNotSearchable"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyApiNames": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Search is not enabled on the specified properties. Please mark the properties as *Searchable*\nin the **Ontology Manager** to enable search on them. There may be a short delay\nbetween the time a property is marked *Searchable* and when it can be used.\n",
        "plainTextDescription": "Search is not enabled on the specified properties. Please mark the properties as Searchable\nin the Ontology Manager to enable search on them. There may be a short delay\nbetween the time a property is marked Searchable and when it can be used.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "attachmentRid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "AttachmentRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested attachment is not found, or the client token does not have access to it. \nAttachments that are not attached to any objects are deleted after two weeks.\nAttachments that have not been attached to an object can only be viewed by the user who uploaded them.\nAttachments that have been attached to an object can be viewed by users who can view the object.\n",
        "plainTextDescription": "The requested attachment is not found, or the client token does not have access to it.\nAttachments that are not attached to any objects are deleted after two weeks.\nAttachments that have not been attached to an object can only be viewed by the user who uploaded them.\nAttachments that have been attached to an object can be viewed by users who can view the object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionContainsDuplicateEdits"
      },
      "errorType": "CONFLICT",
      "parameters": {},
      "documentation": {
        "description": "The given action request has multiple edits on the same object.",
        "plainTextDescription": "The given action request has multiple edits on the same object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "objectTypeRid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested object type is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested object type is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParentAttachmentPermissionDenied"
      },
      "errorType": "PERMISSION_DENIED",
      "parameters": {},
      "documentation": {
        "description": "The user does not have permission to parent attachments.\n",
        "plainTextDescription": "The user does not have permission to parent attachments.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidGroupId"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "groupId": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The provided value for a group id must be a UUID.",
        "plainTextDescription": "The provided value for a group id must be a UUID.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologySyncing"
      },
      "errorType": "CONFLICT",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested object type has been changed in the **Ontology Manager** and changes are currently being applied. Wait a\nfew seconds and try again.\n",
        "plainTextDescription": "The requested object type has been changed in the Ontology Manager and changes are currently being applied. Wait a\nfew seconds and try again.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidDurationGroupByPropertyType"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Invalid property type for duration groupBy.\n",
        "plainTextDescription": "Invalid property type for duration groupBy.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "actionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ActionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The action is not found, or the user does not have access to it.",
        "plainTextDescription": "The action is not found, or the user does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterObjectSetRidNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectSetRid": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "rid",
              "rid": {}
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The parameter object set RID is not found, or the client token does not have access to it.\n",
        "plainTextDescription": "The parameter object set RID is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidAggregationOrdering"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "Aggregation ordering can only be applied to metrics with exactly one groupBy clause.\n",
        "plainTextDescription": "Aggregation ordering can only be applied to metrics with exactly one groupBy clause.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectAlreadyExists"
      },
      "errorType": "CONFLICT",
      "parameters": {},
      "documentation": {
        "description": "The object the user is attempting to create already exists.\n",
        "plainTextDescription": "The object the user is attempting to create already exists.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectSetNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectSetRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectSetRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested object set is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested object set is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "linkType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "LinkTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The link type is not found, or the user does not have access to it.",
        "plainTextDescription": "The link type is not found, or the user does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MarketplaceQueryMappingNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "queryType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "QueryApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "artifactRepository": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ArtifactRepositoryRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "packageName": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "SdkPackageName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given query could not be mapped to a Marketplace installation.",
        "plainTextDescription": "The given query could not be mapped to a Marketplace installation.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidRangeQuery"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "lt": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "description": "Less than",
            "plainTextDescription": "Less than",
            "example": []
          }
        },
        "gt": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "description": "Greater than",
            "plainTextDescription": "Greater than",
            "example": []
          }
        },
        "lte": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "description": "Less than or equal",
            "plainTextDescription": "Less than or equal",
            "example": []
          }
        },
        "gte": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "any",
                  "any": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "description": "Greater than or equal",
            "plainTextDescription": "Greater than or equal",
            "example": []
          }
        },
        "field": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The specified query range filter is invalid.\n",
        "plainTextDescription": "The specified query range filter is invalid.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionParameterObjectNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "parameterId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ParameterId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The parameter object reference or parameter default value is not found, or the client token does not have access to it.\n",
        "plainTextDescription": "The parameter object reference or parameter default value is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidPropertyValue"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyValue": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyValue"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The value of the given property is invalid. See the documentation of `PropertyValue` for details on\nhow properties are represented.\n",
        "plainTextDescription": "The value of the given property is invalid. See the documentation of PropertyValue for details on\nhow properties are represented.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertiesNotSortable"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "properties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Results could not be ordered by the requested properties. Please mark the properties as *Searchable* and\n*Sortable* in the **Ontology Manager** to enable their use in `orderBy` parameters. There may be a short delay\nbetween the time a property is set to *Searchable* and *Sortable* and when it can be used.\n",
        "plainTextDescription": "Results could not be ordered by the requested properties. Please mark the properties as Searchable and\nSortable in the Ontology Manager to enable their use in orderBy parameters. There may be a short delay\nbetween the time a property is set to Searchable and Sortable and when it can be used.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectChanged"
      },
      "errorType": "CONFLICT",
      "parameters": {},
      "documentation": {
        "description": "An object used by this `Action` was changed by someone else while the `Action` was running.\n",
        "plainTextDescription": "An object used by this Action was changed by someone else while the Action was running.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FunctionExecutionTimedOut"
      },
      "errorType": "TIMEOUT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidApplyActionOptionCombination"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "invalidCombination": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ApplyActionRequestOptions"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given options are individually valid but cannot be used in the given combination.",
        "plainTextDescription": "The given options are individually valid but cannot be used in the given combination.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceTypesNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "apiName": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "rid": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested interface types were not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested interface types were not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MarketplaceActionMappingNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "actionType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ActionTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "artifactRepository": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ArtifactRepositoryRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "packageName": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "SdkPackageName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given action could not be mapped to a Marketplace installation.",
        "plainTextDescription": "The given action could not be mapped to a Marketplace installation.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyTypeDoesNotSupportNearestNeighbors"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "The provided propertyIdentifier is not configured with an embedding model in the ontology.",
        "plainTextDescription": "The provided propertyIdentifier is not configured with an embedding model in the ontology.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidFields"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "properties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The value of the given field does not match the expected pattern. For example, an Ontology object property `id`\nshould be written `properties.id`.\n",
        "plainTextDescription": "The value of the given field does not match the expected pattern. For example, an Ontology object property id\nshould be written properties.id.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidQueryParameterValue"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "parameterDataType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "QueryDataType"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "parameterId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ParameterId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "parameterValue": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DataValue"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The value of the given parameter is invalid. See the documentation of `DataValue` for details on\nhow parameters are represented.\n",
        "plainTextDescription": "The value of the given parameter is invalid. See the documentation of DataValue for details on\nhow parameters are represented.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "actionType": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "rid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ActionTypeRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The action type is not found, or the user does not have access to it.",
        "plainTextDescription": "The action type is not found, or the user does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MarketplaceLinkMappingNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "linkType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "LinkTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "artifactRepository": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ArtifactRepositoryRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "packageName": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "SdkPackageName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given link could not be mapped to a Marketplace installation.",
        "plainTextDescription": "The given link could not be mapped to a Marketplace installation.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypeNotSynced"
      },
      "errorType": "CONFLICT",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested object type is not synced into the ontology. Please reach out to your Ontology\nAdministrator to re-index the object type in Ontology Management Application.\n",
        "plainTextDescription": "The requested object type is not synced into the ontology. Please reach out to your Ontology\nAdministrator to re-index the object type in Ontology Management Application.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyEditsExceededLimit"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "editsCount": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "integer",
              "integer": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "editsLimit": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "integer",
              "integer": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The number of edits to the Ontology exceeded the allowed limit.\nThis may happen because of the request or because the Action is modifying too many objects.\nPlease change the size of your request or contact the Ontology administrator.\n",
        "plainTextDescription": "The number of edits to the Ontology exceeded the allowed limit.\nThis may happen because of the request or because the Action is modifying too many objects.\nPlease change the size of your request or contact the Ontology administrator.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationGroupCountExceededLimit"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "groupsCount": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "groupsLimit": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "integer",
                  "integer": {}
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The number of groups in the aggregations grouping exceeded the allowed limit. This can typically be fixed by\nadjusting your query to reduce the number of groups created by your aggregation. For instance:\n- If you are using multiple `groupBy` clauses, try reducing the number of clauses.\n- If you are using a `groupBy` clause with a high cardinality property, try filtering the data first\n  to reduce the number of groups.\n",
        "plainTextDescription": "The number of groups in the aggregations grouping exceeded the allowed limit. This can typically be fixed by\nadjusting your query to reduce the number of groups created by your aggregation. For instance:\n\nIf you are using multiple groupBy clauses, try reducing the number of clauses.\nIf you are using a groupBy clause with a high cardinality property, try filtering the data first\nto reduce the number of groups.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DerivedPropertyApiNamesNotUnique"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "derivedPropertyApiNames": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "DerivedPropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "At least one of the requested derived property API names already exist on the object set.",
        "plainTextDescription": "At least one of the requested derived property API names already exist on the object set.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidContentType"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "The `Content-Type` cannot be inferred from the request content and filename.\nPlease check your request content and filename to ensure they are compatible.\n",
        "plainTextDescription": "The Content-Type cannot be inferred from the request content and filename.\nPlease check your request content and filename to ensure they are compatible.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertiesNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "properties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested properties are not found on the object type.",
        "plainTextDescription": "The requested properties are not found on the object type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FunctionInvalidInput"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidSortOrder"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "invalidSortOrder": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested sort order of one or more properties is invalid. Valid sort orders are 'asc' or 'desc'. Sort\norder can also be omitted, and defaults to 'asc'.\n",
        "plainTextDescription": "The requested sort order of one or more properties is invalid. Valid sort orders are 'asc' or 'desc'. Sort\norder can also be omitted, and defaults to 'asc'.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidPropertyFiltersCombination"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyFilters": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyFilter"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The provided filters cannot be used together.",
        "plainTextDescription": "The provided filters cannot be used together.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectsExceededLimit"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "There are more objects, but they cannot be returned by this API. Only 10,000 objects are available through this\nAPI for a given request.\n",
        "plainTextDescription": "There are more objects, but they cannot be returned by this API. Only 10,000 objects are available through this\nAPI for a given request.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "DuplicateOrderBy"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "properties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested sort order includes duplicate properties.",
        "plainTextDescription": "The requested sort order includes duplicate properties.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FunctionEncounteredUserFacingError"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "message": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The authored function failed to execute because of a user induced error. The message argument\nis meant to be displayed to the user.\n",
        "plainTextDescription": "The authored function failed to execute because of a user induced error. The message argument\nis meant to be displayed to the user.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidUserId"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "userId": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The provided value for a user id must be a UUID.",
        "plainTextDescription": "The provided value for a user id must be a UUID.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "query": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "QueryApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The query is not found, or the user does not have access to it.",
        "plainTextDescription": "The query is not found, or the user does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologySyncingObjectTypes"
      },
      "errorType": "CONFLICT",
      "parameters": {
        "objectTypes": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "One or more requested object types have been changed in the **Ontology Manager** and changes are currently being\napplied. Wait a few seconds and try again.\n",
        "plainTextDescription": "One or more requested object types have been changed in the Ontology Manager and changes are currently being\napplied. Wait a few seconds and try again.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidAggregationRange"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "Aggregation range should include one lt or lte and one gt or gte.\n",
        "plainTextDescription": "Aggregation range should include one lt or lte and one gt or gte.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterObjectNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "primaryKey": {
          "type": {
            "type": "map",
            "map": {
              "keyType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "valueType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PrimaryKeyValue"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The parameter object reference or parameter default value is not found, or the client token does not have access to it.\n",
        "plainTextDescription": "The parameter object reference or parameter default value is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryMemoryExceededLimit"
      },
      "errorType": "TIMEOUT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Memory limits were exceeded for the `Query` execution.\n",
        "plainTextDescription": "Memory limits were exceeded for the Query execution.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidContentLength"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "A `Content-Length` header is required for all uploads, but was missing or invalid.",
        "plainTextDescription": "A Content-Length header is required for all uploads, but was missing or invalid.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MultiplePropertyValuesNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyFilter": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyFilter"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "One of the requested property filters does not support multiple values. Please include only a single value for\nit.\n",
        "plainTextDescription": "One of the requested property filters does not support multiple values. Please include only a single value for\nit.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "EditObjectPermissionDenied"
      },
      "errorType": "PERMISSION_DENIED",
      "parameters": {},
      "documentation": {
        "description": "The user does not have permission to edit this `ObjectType`.\n",
        "plainTextDescription": "The user does not have permission to edit this ObjectType.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertiesHaveDifferentIds"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "properties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SharedPropertyTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Properties used in ordering must have the same ids. Temporary restriction imposed due to OSS limitations.\n",
        "plainTextDescription": "Properties used in ordering must have the same ids. Temporary restriction imposed due to OSS limitations.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "ontologyRid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "apiName": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "OntologyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested Ontology is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested Ontology is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectTypeApiName": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyApiName": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested property type is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested property type is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MarketplaceInstallationNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "artifactRepository": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ArtifactRepositoryRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "packageName": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "SdkPackageName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given marketplace installation could not be found or the user does not have access to it.\n",
        "plainTextDescription": "The given marketplace installation could not be found or the user does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidPropertyType"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given property type is not of the expected type.\n",
        "plainTextDescription": "The given property type is not of the expected type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionParameterObjectTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "parameterId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ParameterId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The parameter references an object type that could not be found, or the client token does not have access to it.\n",
        "plainTextDescription": "The parameter references an object type that could not be found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "UnknownParameter"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "unknownParameters": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ParameterId"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "expectedParameters": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ParameterId"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The provided parameters were not found. Please look at the `knownParameters` field\nto see which ones are available.\n",
        "plainTextDescription": "The provided parameters were not found. Please look at the knownParameters field\nto see which ones are available.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "FunctionExecutionFailed"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "message": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "stacktrace": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionEditsReadOnlyEntity"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "entityTypeRid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given action request performs edits on a type that is read-only or does not allow edits.",
        "plainTextDescription": "The given action request performs edits on a type that is read-only or does not allow edits.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidSortType"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "invalidSortType": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested sort type of one or more clauses is invalid. Valid sort types are 'p' or 'properties'.",
        "plainTextDescription": "The requested sort type of one or more clauses is invalid. Valid sort types are 'p' or 'properties'.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyNotFound"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "Failed to find a provided property for a given object.\n",
        "plainTextDescription": "Failed to find a provided property for a given object.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "OntologyApiNameNotUnique"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "ontologyApiName": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "OntologyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The given Ontology API name is not unique. Use the Ontology RID in place of the Ontology API name.",
        "plainTextDescription": "The given Ontology API name is not unique. Use the Ontology RID in place of the Ontology API name.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AggregationMemoryExceededLimit"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "memoryUsedBytes": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "memoryLimitBytes": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The amount of memory used in the request exceeded the limit. This can typically be fixed by\nadjusting your query to reduce the number of groups created by your aggregation. For instance:\n- If you are using multiple `groupBy` clauses, try reducing the number of clauses.\n- If you are using a `groupBy` clause with a high cardinality property, try filtering the data first\n  to reduce the number of groups.\n",
        "plainTextDescription": "The amount of memory used in the request exceeded the limit. This can typically be fixed by\nadjusting your query to reduce the number of groups created by your aggregation. For instance:\n\nIf you are using multiple groupBy clauses, try reducing the number of clauses.\nIf you are using a groupBy clause with a high cardinality property, try filtering the data first\nto reduce the number of groups.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyFiltersNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyFilters": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyFilter"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "At least one of the requested property filters are not supported. See the documentation of `PropertyFilter` for\na list of supported property filters.\n",
        "plainTextDescription": "At least one of the requested property filters are not supported. See the documentation of PropertyFilter for\na list of supported property filters.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkAlreadyExists"
      },
      "errorType": "CONFLICT",
      "parameters": {},
      "documentation": {
        "description": "The link the user is attempting to create already exists.\n",
        "plainTextDescription": "The link the user is attempting to create already exists.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ViewObjectPermissionDenied"
      },
      "errorType": "PERMISSION_DENIED",
      "parameters": {
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The provided token does not have permission to view any data sources backing this object type. Ensure the object\ntype has backing data sources configured and visible.\n",
        "plainTextDescription": "The provided token does not have permission to view any data sources backing this object type. Ensure the object\ntype has backing data sources configured and visible.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionValidationFailed"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "actionType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ActionTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The validation failed for the given action parameters. Please use the `validateAction` endpoint for more\ndetails.\n",
        "plainTextDescription": "The validation failed for the given action parameters. Please use the validateAction endpoint for more\ndetails.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MultipleGroupByOnFieldNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "duplicateFields": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "builtin",
                "builtin": {
                  "type": "string",
                  "string": {}
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Aggregation cannot group by on the same field multiple times.\n",
        "plainTextDescription": "Aggregation cannot group by on the same field multiple times.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "LinkedObjectNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "linkType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "LinkTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "linkedObjectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "linkedObjectPrimaryKey": {
          "type": {
            "type": "map",
            "map": {
              "keyType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "valueType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PrimaryKeyValue"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The linked object with the given primary key is not found, or the user does not have access to it.",
        "plainTextDescription": "The linked object with the given primary key is not found, or the user does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ActionEditedPropertiesNotFound"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "Actions attempted to edit properties that could not be found on the object type.\nPlease contact the Ontology administrator to resolve this issue.\n",
        "plainTextDescription": "Actions attempted to edit properties that could not be found on the object type.\nPlease contact the Ontology administrator to resolve this issue.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidPropertyFilterValue"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "expectedType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyFilter": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyFilter"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyFilterValue": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FilterValue"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The value of the given property filter is invalid. For instance, 2 is an invalid value for\n`isNull` in `properties.address.isNull=2` because the `isNull` filter expects a value of boolean type.\n",
        "plainTextDescription": "The value of the given property filter is invalid. For instance, 2 is an invalid value for\nisNull in properties.address.isNull=2 because the isNull filter expects a value of boolean type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "QueryEncounteredUserFacingError"
      },
      "errorType": "CONFLICT",
      "parameters": {
        "functionRid": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionRid"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        },
        "functionVersion": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "FunctionVersion"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "message": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The authored `Query` failed to execute because of a user induced error. The message argument\nis meant to be displayed to the user.\n",
        "plainTextDescription": "The authored Query failed to execute because of a user induced error. The message argument\nis meant to be displayed to the user.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectTypesNotSynced"
      },
      "errorType": "CONFLICT",
      "parameters": {
        "objectTypes": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "One or more of the requested object types are not synced into the ontology. Please reach out to your Ontology\nAdministrator to re-index the object type(s) in Ontology Management Application.\n",
        "plainTextDescription": "One or more of the requested object types are not synced into the ontology. Please reach out to your Ontology\nAdministrator to re-index the object type(s) in Ontology Management Application.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SharedPropertiesNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "missingSharedProperties": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SharedPropertyTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested shared property types are not present on every object type.",
        "plainTextDescription": "The requested shared property types are not present on every object type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InterfaceTypeNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "apiName": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "rid": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "InterfaceTypeRid"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested interface type is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested interface type is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "AttachmentSizeExceededLimit"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "fileSizeBytes": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "fileLimitBytes": {
          "type": {
            "type": "builtin",
            "builtin": {
              "type": "string",
              "string": {}
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The file is too large to be uploaded as an attachment.\nThe maximum attachment size is 200MB.\n",
        "plainTextDescription": "The file is too large to be uploaded as an attachment.\nThe maximum attachment size is 200MB.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "SearchVectorDimensionsDiffer"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "The dimensions of the provided vector don't match the dimensions of the embedding model being queried.",
        "plainTextDescription": "The dimensions of the provided vector don't match the dimensions of the embedding model being queried.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ObjectNotFound"
      },
      "errorType": "NOT_FOUND",
      "parameters": {
        "objectType": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ObjectTypeApiName"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "primaryKey": {
          "type": {
            "type": "map",
            "map": {
              "keyType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PropertyApiName"
                  }
                }
              },
              "valueType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "PrimaryKeyValue"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The requested object is not found, or the client token does not have access to it.",
        "plainTextDescription": "The requested object is not found, or the client token does not have access to it.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidOrderType"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "orderType": {
          "type": {
            "type": "optional",
            "optional": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "SearchOrderByType"
                  }
                }
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "This query type does not support the provided order type",
        "plainTextDescription": "This query type does not support the provided order type",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "PropertyApiNameNotFound"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "propertyId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "A property that was required to have an API name, such as a primary key, is missing one. You can set an API\nname for it using the **Ontology Manager**.\n",
        "plainTextDescription": "A property that was required to have an API name, such as a primary key, is missing one. You can set an API\nname for it using the Ontology Manager.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "TooManyNearestNeighborsRequested"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {},
      "documentation": {
        "description": "The value of numNeighbors must be in the range 1 &lt;= numNeighbors &lt;= 500.",
        "plainTextDescription": "The value of numNeighbors must be in the range 1 <= numNeighbors <= 500.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "ParameterTypeNotSupported"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "parameterId": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ParameterId"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "parameterBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "The type of the requested parameter is not currently supported by this API. If you need support for this,\nplease reach out to Palantir Support.\n",
        "plainTextDescription": "The type of the requested parameter is not currently supported by this API. If you need support for this,\nplease reach out to Palantir Support.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "InvalidAggregationRangePropertyType"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "property": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "PropertyApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "objectType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ObjectTypeApiName"
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        },
        "propertyBaseType": {
          "type": {
            "type": "reference",
            "reference": {
              "locator": {
                "namespaceName": "Core",
                "localName": "ValueType"
              }
            }
          },
          "safety": "SAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Range group by is not supported by property type.\n",
        "plainTextDescription": "Range group by is not supported by property type.",
        "example": []
      }
    }, {
      "locator": {
        "namespaceName": "Core",
        "localName": "MissingParameter"
      },
      "errorType": "INVALID_ARGUMENT",
      "parameters": {
        "parameters": {
          "type": {
            "type": "list",
            "list": {
              "subType": {
                "type": "reference",
                "reference": {
                  "locator": {
                    "namespaceName": "Core",
                    "localName": "ParameterId"
                  }
                }
              }
            }
          },
          "safety": "UNSAFE",
          "documentation": {
            "example": []
          }
        }
      },
      "documentation": {
        "description": "Required parameters are missing. Please look at the `parameters` field to see which required parameters are\nmissing from the request.\n",
        "plainTextDescription": "Required parameters are missing. Please look at the parameters field to see which required parameters are\nmissing from the request.",
        "example": []
      }
    }]
  }]
}
