<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="43925b42-8778-4000-909c-0ff34ef4e318" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/packages/foundry.geojson/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/foundry.geojson/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/foundry.geojson/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/foundry.geojson/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/foundry.geojson/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.core/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.core/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.core/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.core/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.core/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.gaia/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.gaia/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.gaia/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.gaia/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.gaia/src/public/Map.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.gaia/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.geojson/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.geojson/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.geojson/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.geojson/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.geojson/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.targetworkbench/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.targetworkbench/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.targetworkbench/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.targetworkbench/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.targetworkbench/src/public/TargetBoard.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham.targetworkbench/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/gotham/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/AuthenticationProvider.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/Enrollment.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/EnrollmentRoleAssignment.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/Group.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/GroupMember.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/GroupMembership.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/GroupMembershipExpirationPolicy.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/GroupProviderInfo.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/Host.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/Marking.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/MarkingCategory.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/MarkingMember.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/MarkingRoleAssignment.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/Organization.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/OrganizationRoleAssignment.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/Role.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/User.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/src/public/UserProviderInfo.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.admin/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/public/Agent.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/public/AgentVersion.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/public/Content.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/public/Session.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/src/public/SessionTrace.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.aipagents/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/src/public/LogFile.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.audit/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/src/public/Connection.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/src/public/FileImport.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/src/public/TableImport.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.connectivity/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/src/public/Check.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datahealth/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.datasets/src/public/View.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/public/Folder.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/public/Project.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/public/Resource.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/public/ResourceRole.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/src/public/Space.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.filesystem/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/src/public/Query.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/src/public/ValueType.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/src/public/VersionId.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.functions/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.geojson/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.geojson/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.geojson/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.geojson/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.geojson/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.geojson/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/ActionTypeV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/AttachmentPropertyV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/CipherTextProperty.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/LinkedObjectV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/MediaReferenceProperty.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/ObjectTypeV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/OntologyInterface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/OntologyObjectSet.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/OntologyObjectV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/OntologyTransaction.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/OntologyV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/OntologyValueType.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/TimeSeriesPropertyV2.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.ontologies/src/public/TimeSeriesValueBankProperty.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/public/Build.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/public/Job.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/public/Schedule.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/src/public/ScheduleVersion.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.orchestration/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/src/public/ApiDefinition.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/src/public/OpenApiDefinition.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.publicapis/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/src/public/SqlQuery.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.sqlqueries/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/src/public/Dataset.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/src/public/Stream.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.streams/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/src/public/ThirdPartyApplication.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/src/public/Version.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/src/public/Website.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.thirdpartyapplications/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/_components.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/_errors.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/public/DevModeSettings.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/public/Release.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/public/Repository.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/src/public/WidgetSet.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/internal.foundry.widgets/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/monorepo.cspell/dict.gotham-words.txt" beforeDir="false" afterPath="$PROJECT_DIR$/packages/monorepo.cspell/dict.gotham-words.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/platform-sdk-generator/src/isIgnoredNamespace.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/platform-sdk-generator/src/isIgnoredNamespace.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="judeh/prefix-logic" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="31CLMz3893iMegp6wgu04AJ7Gfz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;judeh/prefix-logic&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Volumes/git/foundry-platform-typescript&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;/Volumes/git/foundry-platform-typescript/src/Main.java&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;
  }
}</component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="43925b42-8778-4000-909c-0ff34ef4e318" name="Changes" comment="" />
      <created>1755023063353</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1755023063353</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/Main.java</url>
          <line>11</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>